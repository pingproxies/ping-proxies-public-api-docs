{
  "components": {
    "parameters": {
      "ClientIPAddress": {
        "description": "Client IP address forwarded by the application.",
        "in": "header",
        "name": "X-Application-Forwarded-Client-IP-Address",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ClientUserAgent": {
        "description": "Client User-Agent forwarded by the application.",
        "in": "header",
        "name": "X-Application-Forwarded-Client-User-Agent",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "page": {
        "description": "Page number for pagination",
        "in": "query",
        "name": "page",
        "schema": {
          "type": "integer"
        }
      },
      "per_page": {
        "description": "Number of items per page for pagination",
        "in": "query",
        "name": "per_page",
        "schema": {
          "type": "integer"
        }
      },
      "sort_by": {
        "description": "Key for sorting or random.",
        "in": "query",
        "name": "sort_by",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ApiRequestSuccessfulRetrieveResponse": {
        "description": "Successful API Request Retrieve",
        "example": {
          "data": {
            "api_request_client_ip_address": "122.33.24.33",
            "api_request_client_user_agent": "Chrome/2023.5.8",
            "api_request_creation_datetime": "2023-11-21 13:55:05.549007",
            "api_request_duration": 251.49846076965332,
            "api_request_id": "450337744011109b4275783f1b01e4fe",
            "api_request_method": "GET",
            "api_request_path": "/1.0/private/user/api_request/search",
            "api_request_status_code": 404
          },
          "message": "API Request retrieve successful."
        },
        "properties": {
          "data": {
            "description": "Data containing API request details",
            "properties": {
              "api_request_client_ip_address": {
                "example": "122.33.24.33",
                "type": "string"
              },
              "api_request_client_user_agent": {
                "example": "Chrome/2023.5.8",
                "type": "string"
              },
              "api_request_creation_datetime": {
                "example": "2023-11-21 13:55:05.549007",
                "type": "string"
              },
              "api_request_duration": {
                "example": 251.49846076965332,
                "type": "number"
              },
              "api_request_id": {
                "example": "450337744011109b4275783f1b01e4fe",
                "type": "string"
              },
              "api_request_method": {
                "example": "GET",
                "type": "string"
              },
              "api_request_path": {
                "example": "/1.0/private/user/api_request/search",
                "type": "string"
              },
              "api_request_status_code": {
                "example": 200,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Description of the response message",
            "example": "API Request retrieve successful.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiRequestSuccessfulSearchResponse": {
        "description": "Successful API Request Search",
        "example": {
          "count": 2,
          "data": [
            {
              "api_request_client_ip_address": "122.33.24.33",
              "api_request_client_user_agent": "Chrome/2023.5.8",
              "api_request_creation_datetime": "2023-11-21 13:03:03.489068",
              "api_request_duration": 511.2912654876709,
              "api_request_id": "f80a7ddca2129da755204beb4b8d2d91",
              "api_request_method": "GET",
              "api_request_path": "/1.0/private/user/api_request/search",
              "api_request_status_code": 200
            },
            {
              "api_request_client_ip_address": "122.33.24.33",
              "api_request_client_user_agent": "Chrome/2023.5.8",
              "api_request_creation_datetime": "2023-11-21 13:03:51.635727",
              "api_request_duration": 364.6986484527588,
              "api_request_id": "76950bf1aa4f1962ec758e905546d673",
              "api_request_method": "GET",
              "api_request_path": "/1.0/private/user/api_request/search",
              "api_request_status_code": 200
            }
          ],
          "message": "API Request search successful."
        },
        "properties": {
          "count": {
            "description": "Count of API requests returned",
            "example": 2,
            "type": "integer"
          },
          "data": {
            "description": "Array of API request data objects",
            "items": {
              "properties": {
                "api_request_client_ip_address": {
                  "example": "122.33.24.33",
                  "type": "string"
                },
                "api_request_client_user_agent": {
                  "example": "Chrome/2023.5.8",
                  "type": "string"
                },
                "api_request_creation_datetime": {
                  "example": "2023-11-21 13:03:03.489068",
                  "type": "string"
                },
                "api_request_duration": {
                  "example": 511.2912654876709,
                  "type": "number"
                },
                "api_request_id": {
                  "example": "f80a7ddca2129da755204beb4b8d2d91",
                  "type": "string"
                },
                "api_request_method": {
                  "example": "GET",
                  "type": "string"
                },
                "api_request_path": {
                  "example": "/1.0/private/user/api_request/search",
                  "type": "string"
                },
                "api_request_status_code": {
                  "example": 200,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "Description of the response message",
            "example": "API Request search successful.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Asn": {
        "properties": {
          "asn_id": {
            "example": 13335,
            "type": "integer"
          },
          "asn_ip_address_count": {
            "example": 1791744,
            "type": "integer"
          },
          "asn_name": {
            "example": "Cloudflare, Inc.",
            "type": "string"
          },
          "asn_node_count": {
            "example": 1234,
            "type": "integer"
          },
          "asn_rir": {
            "enum": [
              "arin",
              "ripe",
              "apnic",
              "lacnic",
              "afrinic"
            ],
            "example": "apnic",
            "type": "string"
          },
          "asn_type": {
            "enum": [
              "business",
              "cdn",
              "education",
              "gov",
              "hosting",
              "isp"
            ],
            "example": "hosting",
            "type": "string"
          },
          "country_id": {
            "example": "us",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsnSuccessfulRetrieveResponse": {
        "description": "Asn retrieve was successful.",
        "example": {
          "data": {
            "asn_id": 13335,
            "asn_ip_address_count": 1791744,
            "asn_name": "Cloudflare, Inc.",
            "asn_node_count": 1234,
            "asn_rir": "apnic",
            "asn_type": "hosting",
            "country_id": "us"
          },
          "message": "Asn successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Asn item details.",
            "properties": {
              "asn_id": {
                "example": 13335,
                "type": "integer"
              },
              "asn_ip_address_count": {
                "example": 1791744,
                "type": "integer"
              },
              "asn_name": {
                "example": "Cloudflare, Inc.",
                "type": "string"
              },
              "asn_node_count": {
                "example": 1234,
                "type": "integer"
              },
              "asn_rir": {
                "enum": [
                  "arin",
                  "ripe",
                  "apnic",
                  "lacnic",
                  "afrinic"
                ],
                "example": "apnic",
                "type": "string"
              },
              "asn_type": {
                "enum": [
                  "business",
                  "cdn",
                  "education",
                  "gov",
                  "hosting",
                  "isp"
                ],
                "example": "hosting",
                "type": "string"
              },
              "country_id": {
                "example": "us",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsnSuccessfulSearchResponse": {
        "description": "Asn search was successful.",
        "example": {
          "data": [
            {
              "asn_id": 13335,
              "asn_ip_address_count": 1791744,
              "asn_name": "Cloudflare, Inc.",
              "asn_node_count": 1234,
              "asn_rir": "apnic",
              "asn_type": "hosting",
              "country_id": "us"
            }
          ],
          "item_count": 1,
          "message": "Asn search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Asn items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "asn_id": {
                  "example": 13335,
                  "type": "integer"
                },
                "asn_ip_address_count": {
                  "example": 1791744,
                  "type": "integer"
                },
                "asn_name": {
                  "example": "Cloudflare, Inc.",
                  "type": "string"
                },
                "asn_node_count": {
                  "example": 1234,
                  "type": "integer"
                },
                "asn_rir": {
                  "enum": [
                    "arin",
                    "ripe",
                    "apnic",
                    "lacnic",
                    "afrinic"
                  ],
                  "example": "apnic",
                  "type": "string"
                },
                "asn_type": {
                  "enum": [
                    "business",
                    "cdn",
                    "education",
                    "gov",
                    "hosting",
                    "isp"
                  ],
                  "example": "hosting",
                  "type": "string"
                },
                "country_id": {
                  "example": "us",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Asn items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Asn items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Asn items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BadRequestResponse": {
        "description": "Bad Request",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Bad Request",
          "message": "The data provided does not match the expected format."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Bad Request",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "The data provided does not match the expected format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "City": {
        "properties": {
          "city_alias": {
            "example": "City of Lights",
            "type": "string"
          },
          "city_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "city_example_postcode": {
            "example": "75004",
            "type": "string"
          },
          "city_id": {
            "example": 379657,
            "type": "integer"
          },
          "city_is_populous": {
            "example": true,
            "type": "boolean"
          },
          "city_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "city_latitude": {
            "example": 48.85341,
            "type": "number"
          },
          "city_longitude": {
            "example": 2.3488,
            "type": "number"
          },
          "city_name": {
            "example": "Paris",
            "type": "string"
          },
          "city_node_count": {
            "example": 9320,
            "type": "integer"
          },
          "city_population": {
            "example": 2138551,
            "type": "integer"
          },
          "city_timezone": {
            "example": "Europe/Paris",
            "type": "string"
          },
          "subdivision_id": {
            "example": "Ile-de-France",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CitySuccessfulRetrieveResponse": {
        "description": "City retrieve was successful.",
        "example": {
          "data": {
            "city_alias": "City of Lights",
            "city_example_postcode": "75004",
            "city_id": 379657,
            "city_is_populous": true,
            "city_latitude": 48.85341,
            "city_longitude": 2.3488,
            "city_name": "Paris",
            "city_node_count": 9320,
            "city_population": 2138551,
            "city_timezone": "Europe/Paris",
            "subdivision_id": "Ile-de-France"
          },
          "message": "City successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved City item details.",
            "properties": {
              "city_alias": {
                "example": "City of Lights",
                "type": "string"
              },
              "city_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "city_example_postcode": {
                "example": "75004",
                "type": "string"
              },
              "city_id": {
                "example": 379657,
                "type": "integer"
              },
              "city_is_populous": {
                "example": true,
                "type": "boolean"
              },
              "city_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "city_latitude": {
                "example": 48.85341,
                "type": "number"
              },
              "city_longitude": {
                "example": 2.3488,
                "type": "number"
              },
              "city_name": {
                "example": "Paris",
                "type": "string"
              },
              "city_node_count": {
                "example": 9320,
                "type": "integer"
              },
              "city_population": {
                "example": 2138551,
                "type": "integer"
              },
              "city_timezone": {
                "example": "Europe/Paris",
                "type": "string"
              },
              "subdivision_id": {
                "example": "Ile-de-France",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CitySuccessfulSearchResponse": {
        "description": "City search was successful.",
        "example": {
          "data": [
            {
              "city_alias": "City of Lights",
              "city_example_postcode": "75004",
              "city_id": 379657,
              "city_is_populous": true,
              "city_latitude": 48.85341,
              "city_longitude": 2.3488,
              "city_name": "Paris",
              "city_node_count": 9320,
              "city_population": 2138551,
              "city_timezone": "Europe/Paris",
              "subdivision_id": "Ile-de-France"
            }
          ],
          "item_count": 1,
          "message": "City search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of City items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "city_alias": {
                  "example": "City of Lights",
                  "type": "string"
                },
                "city_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "city_example_postcode": {
                  "example": "75004",
                  "type": "string"
                },
                "city_id": {
                  "example": 379657,
                  "type": "integer"
                },
                "city_is_populous": {
                  "example": true,
                  "type": "boolean"
                },
                "city_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "city_latitude": {
                  "example": 48.85341,
                  "type": "number"
                },
                "city_longitude": {
                  "example": 2.3488,
                  "type": "number"
                },
                "city_name": {
                  "example": "Paris",
                  "type": "string"
                },
                "city_node_count": {
                  "example": 9320,
                  "type": "integer"
                },
                "city_population": {
                  "example": 2138551,
                  "type": "integer"
                },
                "city_timezone": {
                  "example": "Europe/Paris",
                  "type": "string"
                },
                "subdivision_id": {
                  "example": "Ile-de-France",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of City items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of City items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of City items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConflictResponse": {
        "description": "Conflict",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Conflict",
          "message": "There is a conflict with another resource."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Conflict",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "There is a conflict with another resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Continent": {
        "properties": {
          "continent_alias": {
            "example": "eu",
            "type": "string"
          },
          "continent_id": {
            "example": "eu",
            "type": "string"
          },
          "continent_name": {
            "example": "Europe",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContinentSuccessfulRetrieveResponse": {
        "description": "Continent retrieve was successful.",
        "example": {
          "data": {
            "continent_alias": "eu",
            "continent_id": "eu",
            "continent_name": "Europe"
          },
          "message": "Continent successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Continent item details.",
            "properties": {
              "continent_alias": {
                "example": "eu",
                "type": "string"
              },
              "continent_id": {
                "example": "eu",
                "type": "string"
              },
              "continent_name": {
                "example": "Europe",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContinentSuccessfulSearchResponse": {
        "description": "Continent search was successful.",
        "example": {
          "data": [
            {
              "continent_alias": "eu",
              "continent_id": "eu",
              "continent_name": "Europe"
            }
          ],
          "item_count": 1,
          "message": "Continent search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Continent items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "continent_alias": {
                  "example": "eu",
                  "type": "string"
                },
                "continent_id": {
                  "example": "eu",
                  "type": "string"
                },
                "continent_name": {
                  "example": "Europe",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Continent items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Continent items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Continent items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Country": {
        "properties": {
          "continent_id": {
            "example": "eu",
            "type": "string"
          },
          "country_alias": {
            "example": "fr",
            "type": "string"
          },
          "country_id": {
            "example": "fr",
            "type": "string"
          },
          "country_is_european_union": {
            "example": true,
            "type": "boolean"
          },
          "country_name": {
            "example": "France",
            "type": "string"
          },
          "country_node_count": {
            "example": 1234,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CountrySuccessfulRetrieveResponse": {
        "description": "Country retrieve was successful.",
        "example": {
          "data": {
            "continent_id": "eu",
            "country_alias": "fr",
            "country_id": "fr",
            "country_is_european_union": true,
            "country_name": "France",
            "country_node_count": 1234
          },
          "message": "Country successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Country item details.",
            "properties": {
              "continent_id": {
                "example": "eu",
                "type": "string"
              },
              "country_alias": {
                "example": "fr",
                "type": "string"
              },
              "country_id": {
                "example": "fr",
                "type": "string"
              },
              "country_is_european_union": {
                "example": true,
                "type": "boolean"
              },
              "country_name": {
                "example": "France",
                "type": "string"
              },
              "country_node_count": {
                "example": 1234,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountrySuccessfulSearchResponse": {
        "description": "Country search was successful.",
        "example": {
          "data": [
            {
              "continent_id": "eu",
              "country_alias": "fr",
              "country_id": "fr",
              "country_is_european_union": true,
              "country_name": "France",
              "country_node_count": 1234
            }
          ],
          "item_count": 1,
          "message": "Country search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Country items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "continent_id": {
                  "example": "eu",
                  "type": "string"
                },
                "country_alias": {
                  "example": "fr",
                  "type": "string"
                },
                "country_id": {
                  "example": "fr",
                  "type": "string"
                },
                "country_is_european_union": {
                  "example": true,
                  "type": "boolean"
                },
                "country_name": {
                  "example": "France",
                  "type": "string"
                },
                "country_node_count": {
                  "example": 1234,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Country items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Country items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Country items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Customer": {
        "properties": {
          "country_id": {
            "example": "us",
            "type": "string"
          },
          "country_id_billing": {
            "example": "us",
            "type": "string"
          },
          "customer_billing_line_one": {
            "example": "1",
            "type": "string"
          },
          "customer_billing_line_two": {
            "example": "Infinite Loop",
            "type": "string"
          },
          "customer_billing_name": {
            "example": "Steve Jobs",
            "type": "string"
          },
          "customer_billing_subdivision_name": {
            "example": "Cupertino",
            "type": "string"
          },
          "customer_billing_zip_code": {
            "example": "95014",
            "type": "string"
          },
          "customer_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "customer_discord_id": {
            "example": "dis_ckf3malOP1s",
            "type": "string"
          },
          "customer_discord_oauth_id": {
            "example": "0xfOavU6OUtXxhJ8",
            "type": "string"
          },
          "customer_dob": {
            "example": "2023-09-01",
            "type": "string"
          },
          "customer_email_address": {
            "example": "steve.jobs@apple.com",
            "type": "string"
          },
          "customer_email_two_factor_authentication": {
            "example": true,
            "type": "boolean"
          },
          "customer_first_name": {
            "example": "Steve",
            "type": "string"
          },
          "customer_google_oauth_id": {
            "example": "7Z6CbaOsoDg9AYds",
            "type": "string"
          },
          "customer_id": {
            "example": 1955,
            "type": "integer"
          },
          "customer_is_residential_trial_eligible": {
            "example": true,
            "type": "boolean"
          },
          "customer_iso_language_code": {
            "example": "en",
            "type": "string"
          },
          "customer_kyc_level": {
            "example": 1,
            "type": "integer"
          },
          "customer_last_login_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "customer_last_name": {
            "example": "Jobs",
            "type": "string"
          },
          "customer_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "customer_phone_number": {
            "example": "+14089961010",
            "type": "string"
          },
          "customer_profile_image_url": {
            "example": "https://apple.com/steveprofilepic.jpg",
            "type": "string"
          },
          "customer_proxy_user_limit": {
            "example": 5,
            "type": "integer"
          },
          "customer_requires_information_confirm": {
            "example": false,
            "type": "boolean"
          },
          "customer_requires_password_change": {
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CustomerSuccessfulRetrieveResponse": {
        "description": "Customer retrieve was successful.",
        "example": {
          "data": {
            "country_id": "us",
            "country_id_billing": "us",
            "customer_billing_line_one": "1",
            "customer_billing_line_two": "Infinite Loop",
            "customer_billing_name": "Steve Jobs",
            "customer_billing_subdivision_name": "Cupertino",
            "customer_billing_zip_code": "95014",
            "customer_creation_datetime": "2023-09-01 10:00:00",
            "customer_discord_id": "dis_ckf3malOP1s",
            "customer_discord_oauth_id": "0xfOavU6OUtXxhJ8",
            "customer_dob": "2023-09-01",
            "customer_email_address": "steve.jobs@apple.com",
            "customer_email_two_factor_authentication": true,
            "customer_first_name": "Steve",
            "customer_google_oauth_id": "7Z6CbaOsoDg9AYds",
            "customer_id": 1955,
            "customer_is_residential_trial_eligible": true,
            "customer_iso_language_code": "en",
            "customer_kyc_level": 1,
            "customer_last_login_datetime": "2023-09-10 10:00:00",
            "customer_last_name": "Jobs",
            "customer_last_update_datetime": "2023-09-10 11:00:00",
            "customer_phone_number": "+14089961010",
            "customer_profile_image_url": "https://apple.com/steveprofilepic.jpg",
            "customer_proxy_user_limit": 5,
            "customer_requires_information_confirm": false,
            "customer_requires_password_change": false
          },
          "message": "Customer successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Customer item details.",
            "properties": {
              "country_id": {
                "example": "us",
                "type": "string"
              },
              "country_id_billing": {
                "example": "us",
                "type": "string"
              },
              "customer_billing_line_one": {
                "example": "1",
                "type": "string"
              },
              "customer_billing_line_two": {
                "example": "Infinite Loop",
                "type": "string"
              },
              "customer_billing_name": {
                "example": "Steve Jobs",
                "type": "string"
              },
              "customer_billing_subdivision_name": {
                "example": "Cupertino",
                "type": "string"
              },
              "customer_billing_zip_code": {
                "example": "95014",
                "type": "string"
              },
              "customer_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "customer_discord_id": {
                "example": "dis_ckf3malOP1s",
                "type": "string"
              },
              "customer_discord_oauth_id": {
                "example": "0xfOavU6OUtXxhJ8",
                "type": "string"
              },
              "customer_dob": {
                "example": "2023-09-01",
                "type": "string"
              },
              "customer_email_address": {
                "example": "steve.jobs@apple.com",
                "type": "string"
              },
              "customer_email_two_factor_authentication": {
                "example": true,
                "type": "boolean"
              },
              "customer_first_name": {
                "example": "Steve",
                "type": "string"
              },
              "customer_google_oauth_id": {
                "example": "7Z6CbaOsoDg9AYds",
                "type": "string"
              },
              "customer_id": {
                "example": 1955,
                "type": "integer"
              },
              "customer_is_residential_trial_eligible": {
                "example": true,
                "type": "boolean"
              },
              "customer_iso_language_code": {
                "example": "en",
                "type": "string"
              },
              "customer_kyc_level": {
                "example": 1,
                "type": "integer"
              },
              "customer_last_login_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "customer_last_name": {
                "example": "Jobs",
                "type": "string"
              },
              "customer_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "customer_phone_number": {
                "example": "+14089961010",
                "type": "string"
              },
              "customer_profile_image_url": {
                "example": "https://apple.com/steveprofilepic.jpg",
                "type": "string"
              },
              "customer_proxy_user_limit": {
                "example": 5,
                "type": "integer"
              },
              "customer_requires_information_confirm": {
                "example": false,
                "type": "boolean"
              },
              "customer_requires_password_change": {
                "example": false,
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerSuccessfulSearchResponse": {
        "description": "Customer search was successful.",
        "example": {
          "data": [
            {
              "country_id": "us",
              "country_id_billing": "us",
              "customer_billing_line_one": "1",
              "customer_billing_line_two": "Infinite Loop",
              "customer_billing_name": "Steve Jobs",
              "customer_billing_subdivision_name": "Cupertino",
              "customer_billing_zip_code": "95014",
              "customer_creation_datetime": "2023-09-01 10:00:00",
              "customer_discord_id": "dis_ckf3malOP1s",
              "customer_discord_oauth_id": "0xfOavU6OUtXxhJ8",
              "customer_dob": "2023-09-01",
              "customer_email_address": "steve.jobs@apple.com",
              "customer_email_two_factor_authentication": true,
              "customer_first_name": "Steve",
              "customer_google_oauth_id": "7Z6CbaOsoDg9AYds",
              "customer_id": 1955,
              "customer_is_residential_trial_eligible": true,
              "customer_iso_language_code": "en",
              "customer_kyc_level": 1,
              "customer_last_login_datetime": "2023-09-10 10:00:00",
              "customer_last_name": "Jobs",
              "customer_last_update_datetime": "2023-09-10 11:00:00",
              "customer_phone_number": "+14089961010",
              "customer_profile_image_url": "https://apple.com/steveprofilepic.jpg",
              "customer_proxy_user_limit": 5,
              "customer_requires_information_confirm": false,
              "customer_requires_password_change": false
            }
          ],
          "item_count": 1,
          "message": "Customer search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Customer items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "country_id": {
                  "example": "us",
                  "type": "string"
                },
                "country_id_billing": {
                  "example": "us",
                  "type": "string"
                },
                "customer_billing_line_one": {
                  "example": "1",
                  "type": "string"
                },
                "customer_billing_line_two": {
                  "example": "Infinite Loop",
                  "type": "string"
                },
                "customer_billing_name": {
                  "example": "Steve Jobs",
                  "type": "string"
                },
                "customer_billing_subdivision_name": {
                  "example": "Cupertino",
                  "type": "string"
                },
                "customer_billing_zip_code": {
                  "example": "95014",
                  "type": "string"
                },
                "customer_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "customer_discord_id": {
                  "example": "dis_ckf3malOP1s",
                  "type": "string"
                },
                "customer_discord_oauth_id": {
                  "example": "0xfOavU6OUtXxhJ8",
                  "type": "string"
                },
                "customer_dob": {
                  "example": "2023-09-01",
                  "type": "string"
                },
                "customer_email_address": {
                  "example": "steve.jobs@apple.com",
                  "type": "string"
                },
                "customer_email_two_factor_authentication": {
                  "example": true,
                  "type": "boolean"
                },
                "customer_first_name": {
                  "example": "Steve",
                  "type": "string"
                },
                "customer_google_oauth_id": {
                  "example": "7Z6CbaOsoDg9AYds",
                  "type": "string"
                },
                "customer_id": {
                  "example": 1955,
                  "type": "integer"
                },
                "customer_is_residential_trial_eligible": {
                  "example": true,
                  "type": "boolean"
                },
                "customer_iso_language_code": {
                  "example": "en",
                  "type": "string"
                },
                "customer_kyc_level": {
                  "example": 1,
                  "type": "integer"
                },
                "customer_last_login_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "customer_last_name": {
                  "example": "Jobs",
                  "type": "string"
                },
                "customer_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "customer_phone_number": {
                  "example": "+14089961010",
                  "type": "string"
                },
                "customer_profile_image_url": {
                  "example": "https://apple.com/steveprofilepic.jpg",
                  "type": "string"
                },
                "customer_proxy_user_limit": {
                  "example": 5,
                  "type": "integer"
                },
                "customer_requires_information_confirm": {
                  "example": false,
                  "type": "boolean"
                },
                "customer_requires_password_change": {
                  "example": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Customer items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Customer items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Customer items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ForbiddenResponse": {
        "description": "Forbidden",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Forbidden",
          "message": "You don't have the necessary permissions to access this resource."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Forbidden",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "You don't have the necessary permissions to access this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InternalServer": {
        "description": "Internal Server Error",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Internal Server Error",
          "message": "The server encountered an unexpected condition that prevented it from fulfilling the request."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Internal Server Error",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Log": {
        "properties": {
          "asn_id": {
            "example": 1299,
            "type": "integer"
          },
          "city_alias": {
            "example": "cupertino",
            "type": "string"
          },
          "country_id": {
            "example": "us",
            "type": "string"
          },
          "customer_id": {
            "example": 1955,
            "type": "integer"
          },
          "log_authentication_type": {
            "example": 1,
            "type": "integer"
          },
          "log_client_ip_address": {
            "example": "17.172.224.1",
            "type": "string"
          },
          "log_concurrency": {
            "example": 5,
            "type": "integer"
          },
          "log_egress_ip_address": {
            "example": "10.0.0.2",
            "type": "string"
          },
          "log_handshake_elapsed_ms": {
            "example": 150,
            "type": "integer"
          },
          "log_hostname": {
            "example": "apple.com",
            "type": "string"
          },
          "log_id": {
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "type": "string"
          },
          "log_local_ip_address": {
            "example": "10.0.0.1",
            "type": "string"
          },
          "log_local_port": {
            "example": 8080,
            "type": "integer"
          },
          "log_method": {
            "example": "get",
            "type": "string"
          },
          "log_network": {
            "enum": [
              "datacenter",
              "isp",
              "residential"
            ],
            "example": "residential",
            "type": "string"
          },
          "log_protocol": {
            "enum": [
              "http",
              "socks"
            ],
            "example": "http",
            "type": "string"
          },
          "log_request_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "log_session_id": {
            "example": "S8W7G3JGZ44K4Z",
            "type": "string"
          },
          "log_smartpath_enabled": {
            "example": false,
            "type": "boolean"
          },
          "log_smartpath_routed": {
            "example": false,
            "type": "boolean"
          },
          "log_status_code": {
            "example": 200,
            "type": "integer"
          },
          "log_total_bytes": {
            "example": 5120,
            "type": "integer"
          },
          "log_total_elapsed_ms": {
            "example": 12345,
            "type": "integer"
          },
          "log_transport": {
            "enum": [
              "udp",
              "tcp",
              "quic"
            ],
            "example": "tcp",
            "type": "string"
          },
          "log_tunnel_elapsed_ms": {
            "example": 500,
            "type": "integer"
          },
          "proxy_id": {
            "example": "5dd8dec0-bc2f-41e8-824e-ba1ef3af838b",
            "type": "string"
          },
          "proxy_user_id": {
            "example": "stevejobs",
            "type": "string"
          },
          "service_id": {
            "example": "API-1234-5678",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogSuccessfulRetrieveResponse": {
        "description": "Log retrieve was successful.",
        "example": {
          "data": {
            "asn_id": 1299,
            "city_alias": "cupertino",
            "country_id": "us",
            "customer_id": 1955,
            "log_authentication_type": 1,
            "log_client_ip_address": "17.172.224.1",
            "log_concurrency": 5,
            "log_egress_ip_address": "10.0.0.2",
            "log_handshake_elapsed_ms": 150,
            "log_hostname": "apple.com",
            "log_id": "123e4567-e89b-12d3-a456-426614174000",
            "log_local_ip_address": "10.0.0.1",
            "log_local_port": 8080,
            "log_method": "get",
            "log_network": "residential",
            "log_protocol": "http",
            "log_request_datetime": "2023-04-01 13:00:00",
            "log_session_id": "S8W7G3JGZ44K4Z",
            "log_smartpath_enabled": false,
            "log_smartpath_routed": false,
            "log_status_code": 200,
            "log_total_bytes": 5120,
            "log_total_elapsed_ms": 12345,
            "log_transport": "tcp",
            "log_tunnel_elapsed_ms": 500,
            "proxy_id": "5dd8dec0-bc2f-41e8-824e-ba1ef3af838b",
            "proxy_user_id": "stevejobs",
            "service_id": "API-1234-5678"
          },
          "message": "Log successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Log item details.",
            "properties": {
              "asn_id": {
                "example": 1299,
                "type": "integer"
              },
              "city_alias": {
                "example": "cupertino",
                "type": "string"
              },
              "country_id": {
                "example": "us",
                "type": "string"
              },
              "customer_id": {
                "example": 1955,
                "type": "integer"
              },
              "log_authentication_type": {
                "example": 1,
                "type": "integer"
              },
              "log_client_ip_address": {
                "example": "17.172.224.1",
                "type": "string"
              },
              "log_concurrency": {
                "example": 5,
                "type": "integer"
              },
              "log_egress_ip_address": {
                "example": "10.0.0.2",
                "type": "string"
              },
              "log_handshake_elapsed_ms": {
                "example": 150,
                "type": "integer"
              },
              "log_hostname": {
                "example": "apple.com",
                "type": "string"
              },
              "log_id": {
                "example": "123e4567-e89b-12d3-a456-426614174000",
                "type": "string"
              },
              "log_local_ip_address": {
                "example": "10.0.0.1",
                "type": "string"
              },
              "log_local_port": {
                "example": 8080,
                "type": "integer"
              },
              "log_method": {
                "example": "get",
                "type": "string"
              },
              "log_network": {
                "enum": [
                  "datacenter",
                  "isp",
                  "residential"
                ],
                "example": "residential",
                "type": "string"
              },
              "log_protocol": {
                "enum": [
                  "http",
                  "socks"
                ],
                "example": "http",
                "type": "string"
              },
              "log_request_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "log_session_id": {
                "example": "S8W7G3JGZ44K4Z",
                "type": "string"
              },
              "log_smartpath_enabled": {
                "example": false,
                "type": "boolean"
              },
              "log_smartpath_routed": {
                "example": false,
                "type": "boolean"
              },
              "log_status_code": {
                "example": 200,
                "type": "integer"
              },
              "log_total_bytes": {
                "example": 5120,
                "type": "integer"
              },
              "log_total_elapsed_ms": {
                "example": 12345,
                "type": "integer"
              },
              "log_transport": {
                "enum": [
                  "udp",
                  "tcp",
                  "quic"
                ],
                "example": "tcp",
                "type": "string"
              },
              "log_tunnel_elapsed_ms": {
                "example": 500,
                "type": "integer"
              },
              "proxy_id": {
                "example": "5dd8dec0-bc2f-41e8-824e-ba1ef3af838b",
                "type": "string"
              },
              "proxy_user_id": {
                "example": "stevejobs",
                "type": "string"
              },
              "service_id": {
                "example": "API-1234-5678",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogSuccessfulSearchResponse": {
        "description": "Log search was successful.",
        "example": {
          "data": [
            {
              "asn_id": 1299,
              "city_alias": "cupertino",
              "country_id": "us",
              "customer_id": 1955,
              "log_authentication_type": 1,
              "log_client_ip_address": "17.172.224.1",
              "log_concurrency": 5,
              "log_egress_ip_address": "10.0.0.2",
              "log_handshake_elapsed_ms": 150,
              "log_hostname": "apple.com",
              "log_id": "123e4567-e89b-12d3-a456-426614174000",
              "log_local_ip_address": "10.0.0.1",
              "log_local_port": 8080,
              "log_method": "get",
              "log_network": "residential",
              "log_protocol": "http",
              "log_request_datetime": "2023-04-01 13:00:00",
              "log_session_id": "S8W7G3JGZ44K4Z",
              "log_smartpath_enabled": false,
              "log_smartpath_routed": false,
              "log_status_code": 200,
              "log_total_bytes": 5120,
              "log_total_elapsed_ms": 12345,
              "log_transport": "tcp",
              "log_tunnel_elapsed_ms": 500,
              "proxy_id": "5dd8dec0-bc2f-41e8-824e-ba1ef3af838b",
              "proxy_user_id": "stevejobs",
              "service_id": "API-1234-5678"
            }
          ],
          "item_count": 1,
          "message": "Log search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Log items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "asn_id": {
                  "example": 1299,
                  "type": "integer"
                },
                "city_alias": {
                  "example": "cupertino",
                  "type": "string"
                },
                "country_id": {
                  "example": "us",
                  "type": "string"
                },
                "customer_id": {
                  "example": 1955,
                  "type": "integer"
                },
                "log_authentication_type": {
                  "example": 1,
                  "type": "integer"
                },
                "log_client_ip_address": {
                  "example": "17.172.224.1",
                  "type": "string"
                },
                "log_concurrency": {
                  "example": 5,
                  "type": "integer"
                },
                "log_egress_ip_address": {
                  "example": "10.0.0.2",
                  "type": "string"
                },
                "log_handshake_elapsed_ms": {
                  "example": 150,
                  "type": "integer"
                },
                "log_hostname": {
                  "example": "apple.com",
                  "type": "string"
                },
                "log_id": {
                  "example": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "string"
                },
                "log_local_ip_address": {
                  "example": "10.0.0.1",
                  "type": "string"
                },
                "log_local_port": {
                  "example": 8080,
                  "type": "integer"
                },
                "log_method": {
                  "example": "get",
                  "type": "string"
                },
                "log_network": {
                  "enum": [
                    "datacenter",
                    "isp",
                    "residential"
                  ],
                  "example": "residential",
                  "type": "string"
                },
                "log_protocol": {
                  "enum": [
                    "http",
                    "socks"
                  ],
                  "example": "http",
                  "type": "string"
                },
                "log_request_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "log_session_id": {
                  "example": "S8W7G3JGZ44K4Z",
                  "type": "string"
                },
                "log_smartpath_enabled": {
                  "example": false,
                  "type": "boolean"
                },
                "log_smartpath_routed": {
                  "example": false,
                  "type": "boolean"
                },
                "log_status_code": {
                  "example": 200,
                  "type": "integer"
                },
                "log_total_bytes": {
                  "example": 5120,
                  "type": "integer"
                },
                "log_total_elapsed_ms": {
                  "example": 12345,
                  "type": "integer"
                },
                "log_transport": {
                  "enum": [
                    "udp",
                    "tcp",
                    "quic"
                  ],
                  "example": "tcp",
                  "type": "string"
                },
                "log_tunnel_elapsed_ms": {
                  "example": 500,
                  "type": "integer"
                },
                "proxy_id": {
                  "example": "5dd8dec0-bc2f-41e8-824e-ba1ef3af838b",
                  "type": "string"
                },
                "proxy_user_id": {
                  "example": "stevejobs",
                  "type": "string"
                },
                "service_id": {
                  "example": "API-1234-5678",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Log items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Log items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Log items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LogSummary": {
        "properties": {
          "customer_id": {
            "example": 1955,
            "type": "integer"
          },
          "log_summary_bytes": {
            "example": 10000,
            "type": "integer"
          },
          "log_summary_charged_bytes": {
            "example": 9500,
            "type": "integer"
          },
          "log_summary_charged_requests": {
            "example": 98,
            "type": "integer"
          },
          "log_summary_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "log_summary_hostname": {
            "example": "apple.com",
            "type": "string"
          },
          "log_summary_id": {
            "example": "456e7890-e89b-12d3-a456-426614174000",
            "type": "string"
          },
          "log_summary_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "log_summary_network": {
            "enum": [
              "datacenter",
              "isp",
              "residential"
            ],
            "example": "residential",
            "type": "string"
          },
          "log_summary_period": {
            "format": "date-time",
            "type": "string"
          },
          "log_summary_requests": {
            "example": 100,
            "type": "integer"
          },
          "log_summary_smartpath_enabled_bytes": {
            "example": 9500,
            "type": "integer"
          },
          "log_summary_smartpath_enabled_requests": {
            "example": 95,
            "type": "integer"
          },
          "log_summary_smartpath_routed_bytes": {
            "example": 8500,
            "type": "integer"
          },
          "log_summary_smartpath_routed_requests": {
            "example": 85,
            "type": "integer"
          },
          "proxy_user_id": {
            "example": "stevejobs",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogSummarySuccessfulRetrieveResponse": {
        "description": "Log Summary retrieve was successful.",
        "example": {
          "data": {
            "customer_id": 1955,
            "log_summary_bytes": 10000,
            "log_summary_charged_bytes": 9500,
            "log_summary_charged_requests": 98,
            "log_summary_creation_datetime": "2023-04-01 14:00:00",
            "log_summary_hostname": "apple.com",
            "log_summary_id": "456e7890-e89b-12d3-a456-426614174000",
            "log_summary_last_update_datetime": "2023-04-02 14:00:00",
            "log_summary_network": "residential",
            "log_summary_period": "2023-10-01 00:00:00",
            "log_summary_requests": 100,
            "log_summary_smartpath_enabled_bytes": 9500,
            "log_summary_smartpath_enabled_requests": 95,
            "log_summary_smartpath_routed_bytes": 8500,
            "log_summary_smartpath_routed_requests": 85,
            "proxy_user_id": "stevejobs"
          },
          "message": "Log Summary successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Log Summary item details.",
            "properties": {
              "customer_id": {
                "example": 1955,
                "type": "integer"
              },
              "log_summary_bytes": {
                "example": 10000,
                "type": "integer"
              },
              "log_summary_charged_bytes": {
                "example": 9500,
                "type": "integer"
              },
              "log_summary_charged_requests": {
                "example": 98,
                "type": "integer"
              },
              "log_summary_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "log_summary_hostname": {
                "example": "apple.com",
                "type": "string"
              },
              "log_summary_id": {
                "example": "456e7890-e89b-12d3-a456-426614174000",
                "type": "string"
              },
              "log_summary_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "log_summary_network": {
                "enum": [
                  "datacenter",
                  "isp",
                  "residential"
                ],
                "example": "residential",
                "type": "string"
              },
              "log_summary_period": {
                "format": "date-time",
                "type": "string"
              },
              "log_summary_requests": {
                "example": 100,
                "type": "integer"
              },
              "log_summary_smartpath_enabled_bytes": {
                "example": 9500,
                "type": "integer"
              },
              "log_summary_smartpath_enabled_requests": {
                "example": 95,
                "type": "integer"
              },
              "log_summary_smartpath_routed_bytes": {
                "example": 8500,
                "type": "integer"
              },
              "log_summary_smartpath_routed_requests": {
                "example": 85,
                "type": "integer"
              },
              "proxy_user_id": {
                "example": "stevejobs",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogSummarySuccessfulSearchResponse": {
        "description": "Log Summary search was successful.",
        "example": {
          "data": [
            {
              "customer_id": 1955,
              "log_summary_bytes": 10000,
              "log_summary_charged_bytes": 9500,
              "log_summary_charged_requests": 98,
              "log_summary_creation_datetime": "2023-04-01 14:00:00",
              "log_summary_hostname": "apple.com",
              "log_summary_id": "456e7890-e89b-12d3-a456-426614174000",
              "log_summary_last_update_datetime": "2023-04-02 14:00:00",
              "log_summary_network": "residential",
              "log_summary_period": "2023-10-01 00:00:00",
              "log_summary_requests": 100,
              "log_summary_smartpath_enabled_bytes": 9500,
              "log_summary_smartpath_enabled_requests": 95,
              "log_summary_smartpath_routed_bytes": 8500,
              "log_summary_smartpath_routed_requests": 85,
              "proxy_user_id": "stevejobs"
            }
          ],
          "item_count": 1,
          "message": "Log Summary search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Log Summary items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "customer_id": {
                  "example": 1955,
                  "type": "integer"
                },
                "log_summary_bytes": {
                  "example": 10000,
                  "type": "integer"
                },
                "log_summary_charged_bytes": {
                  "example": 9500,
                  "type": "integer"
                },
                "log_summary_charged_requests": {
                  "example": 98,
                  "type": "integer"
                },
                "log_summary_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "log_summary_hostname": {
                  "example": "apple.com",
                  "type": "string"
                },
                "log_summary_id": {
                  "example": "456e7890-e89b-12d3-a456-426614174000",
                  "type": "string"
                },
                "log_summary_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "log_summary_network": {
                  "enum": [
                    "datacenter",
                    "isp",
                    "residential"
                  ],
                  "example": "residential",
                  "type": "string"
                },
                "log_summary_period": {
                  "format": "date-time",
                  "type": "string"
                },
                "log_summary_requests": {
                  "example": 100,
                  "type": "integer"
                },
                "log_summary_smartpath_enabled_bytes": {
                  "example": 9500,
                  "type": "integer"
                },
                "log_summary_smartpath_enabled_requests": {
                  "example": 95,
                  "type": "integer"
                },
                "log_summary_smartpath_routed_bytes": {
                  "example": 8500,
                  "type": "integer"
                },
                "log_summary_smartpath_routed_requests": {
                  "example": 85,
                  "type": "integer"
                },
                "proxy_user_id": {
                  "example": "stevejobs",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Log Summary items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Log Summary items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Log Summary items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MethodNotAllowedResponse": {
        "description": "Method Not Allowed",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Method Not Allowed",
          "message": "Method is not supported for this endpoint."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Method Not Allowed",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "Method is not supported for this endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotFoundResponse": {
        "description": "Not Found",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Not Found",
          "message": "The requested resource or path could not be located."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Not Found",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "The requested resource or path could not be located.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Proxy": {
        "properties": {
          "ip_address_id_v4": {
            "example": "107.225.73.142",
            "type": "string"
          },
          "ip_address_id_v6": {
            "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
            "type": "string"
          },
          "proxy_http_port": {
            "example": 8080,
            "type": "integer"
          },
          "proxy_id": {
            "example": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
            "type": "string"
          },
          "proxy_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "proxy_password": {
            "example": "DHf3PSQXQ7rw1v9",
            "type": "string"
          },
          "proxy_protocol": {
            "enum": [
              "ipv4",
              "ipv6",
              "dual"
            ],
            "example": "ipv4",
            "type": "string"
          },
          "proxy_socks5_port": {
            "example": 1080,
            "type": "integer"
          },
          "proxy_status": {
            "enum": [
              "available",
              "in_use",
              "reserved",
              "waiting",
              "pending_deletion"
            ],
            "example": "in_use",
            "type": "string"
          },
          "proxy_type": {
            "enum": [
              "datacenter",
              "isp",
              "residential"
            ],
            "example": "isp",
            "type": "string"
          },
          "proxy_user_ids": {
            "items": {
              "example": "stevejobs",
              "type": "string"
            },
            "type": "array"
          },
          "proxy_username": {
            "example": "att7018user",
            "type": "string"
          },
          "service_id": {
            "example": "API-1234-5678",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyReplacement": {
        "properties": {
          "proxy_replacement_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "proxy_replacement_http_port": {
            "example": 8080,
            "type": "integer"
          },
          "proxy_replacement_id": {
            "example": 7018,
            "type": "integer"
          },
          "proxy_replacement_ip_address_ipv4": {
            "example": "107.225.73.142",
            "type": "string"
          },
          "proxy_replacement_ip_address_ipv6": {
            "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
            "type": "string"
          },
          "proxy_replacement_new_http_port": {
            "example": 8080,
            "type": "integer"
          },
          "proxy_replacement_new_ip_address_ipv4": {
            "example": "107.225.74.89",
            "type": "string"
          },
          "proxy_replacement_new_ip_address_ipv6": {
            "example": "2600:1000:b12a:728f:452d:a76c:e91b:d235",
            "type": "string"
          },
          "proxy_replacement_new_socks5_port": {
            "example": 1080,
            "type": "integer"
          },
          "proxy_replacement_reason": {
            "enum": [
              "customer_request",
              "ip_reputation",
              "end_of_deployment",
              "outage",
              "other"
            ],
            "example": "customer_request",
            "type": "string"
          },
          "proxy_replacement_socks5_port": {
            "example": 1080,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProxySuccessfulRetrieveResponse": {
        "description": "Proxy retrieve was successful.",
        "example": {
          "data": {
            "ip_address_id_v4": "107.225.73.142",
            "ip_address_id_v6": "2600:1000:b12a:6351:8523:997e:93c4:f124",
            "proxy_http_port": 8080,
            "proxy_id": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
            "proxy_last_update_datetime": "2024-03-12 09:30:00",
            "proxy_password": "DHf3PSQXQ7rw1v9",
            "proxy_protocol": "ipv4",
            "proxy_socks5_port": 1080,
            "proxy_status": "in_use",
            "proxy_type": "isp",
            "proxy_user_ids": [
              "stevejobs"
            ],
            "proxy_username": "att7018user",
            "service_id": "API-1234-5678"
          },
          "message": "Proxy successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Proxy item details.",
            "properties": {
              "ip_address_id_v4": {
                "example": "107.225.73.142",
                "type": "string"
              },
              "ip_address_id_v6": {
                "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
                "type": "string"
              },
              "proxy_http_port": {
                "example": 8080,
                "type": "integer"
              },
              "proxy_id": {
                "example": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
                "type": "string"
              },
              "proxy_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "proxy_password": {
                "example": "DHf3PSQXQ7rw1v9",
                "type": "string"
              },
              "proxy_protocol": {
                "enum": [
                  "ipv4",
                  "ipv6",
                  "dual"
                ],
                "example": "ipv4",
                "type": "string"
              },
              "proxy_socks5_port": {
                "example": 1080,
                "type": "integer"
              },
              "proxy_status": {
                "enum": [
                  "available",
                  "in_use",
                  "reserved",
                  "waiting",
                  "pending_deletion"
                ],
                "example": "in_use",
                "type": "string"
              },
              "proxy_type": {
                "enum": [
                  "datacenter",
                  "isp",
                  "residential"
                ],
                "example": "isp",
                "type": "string"
              },
              "proxy_user_ids": {
                "items": {
                  "example": "stevejobs",
                  "type": "string"
                },
                "type": "array"
              },
              "proxy_username": {
                "example": "att7018user",
                "type": "string"
              },
              "service_id": {
                "example": "API-1234-5678",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxySuccessfulSearchResponse": {
        "description": "Proxy search was successful.",
        "example": {
          "data": [
            {
              "ip_address_id_v4": "107.225.73.142",
              "ip_address_id_v6": "2600:1000:b12a:6351:8523:997e:93c4:f124",
              "proxy_http_port": 8080,
              "proxy_id": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
              "proxy_last_update_datetime": "2024-03-12 09:30:00",
              "proxy_password": "DHf3PSQXQ7rw1v9",
              "proxy_protocol": "ipv4",
              "proxy_socks5_port": 1080,
              "proxy_status": "in_use",
              "proxy_type": "isp",
              "proxy_user_ids": [
                "stevejobs"
              ],
              "proxy_username": "att7018user",
              "service_id": "API-1234-5678"
            }
          ],
          "item_count": 1,
          "message": "Proxy search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Proxy items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "ip_address_id_v4": {
                  "example": "107.225.73.142",
                  "type": "string"
                },
                "ip_address_id_v6": {
                  "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
                  "type": "string"
                },
                "proxy_http_port": {
                  "example": 8080,
                  "type": "integer"
                },
                "proxy_id": {
                  "example": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
                  "type": "string"
                },
                "proxy_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "proxy_password": {
                  "example": "DHf3PSQXQ7rw1v9",
                  "type": "string"
                },
                "proxy_protocol": {
                  "enum": [
                    "ipv4",
                    "ipv6",
                    "dual"
                  ],
                  "example": "ipv4",
                  "type": "string"
                },
                "proxy_socks5_port": {
                  "example": 1080,
                  "type": "integer"
                },
                "proxy_status": {
                  "enum": [
                    "available",
                    "in_use",
                    "reserved",
                    "waiting",
                    "pending_deletion"
                  ],
                  "example": "in_use",
                  "type": "string"
                },
                "proxy_type": {
                  "enum": [
                    "datacenter",
                    "isp",
                    "residential"
                  ],
                  "example": "isp",
                  "type": "string"
                },
                "proxy_user_ids": {
                  "items": {
                    "example": "stevejobs",
                    "type": "string"
                  },
                  "type": "array"
                },
                "proxy_username": {
                  "example": "att7018user",
                  "type": "string"
                },
                "service_id": {
                  "example": "API-1234-5678",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Proxy items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Proxy items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Proxy items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProxyTestServer": {
        "properties": {
          "city_id": {
            "example": 382717,
            "type": "integer"
          },
          "country_id": {
            "example": "us",
            "type": "string"
          },
          "proxy_test_server_id": {
            "example": "sanfrancisco-3-digitalocean-proxytester-1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyTestServerSuccessfulSearchResponse": {
        "description": "Proxy Test Server search was successful.",
        "example": {
          "data": [
            {
              "city_id": "382717",
              "country_id": "us",
              "proxy_test_server_id": "sanfrancisco-3-digitalocean-proxytester-1"
            }
          ],
          "item_count": 1,
          "message": "Proxy Test Server search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Proxy Test Server items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "city_id": {
                  "example": 382717,
                  "type": "integer"
                },
                "country_id": {
                  "example": "us",
                  "type": "string"
                },
                "proxy_test_server_id": {
                  "example": "sanfrancisco-3-digitalocean-proxytester-1",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Proxy Test Server items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Proxy Test Server items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Proxy Test Server items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProxyUser": {
        "properties": {
          "customer_id": {
            "example": 1955,
            "type": "integer"
          },
          "ip_address_authentications": {
            "items": {
              "example": "17.172.224.47",
              "type": "string"
            },
            "type": "array"
          },
          "proxy_user_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "proxy_user_id": {
            "example": "stevejobs",
            "type": "string"
          },
          "proxy_user_ip_address_authentication_limit": {
            "example": 3,
            "type": "integer"
          },
          "proxy_user_is_default": {
            "example": false,
            "type": "boolean"
          },
          "proxy_user_is_deleted": {
            "example": false,
            "type": "boolean"
          },
          "proxy_user_is_service_restricted": {
            "example": false,
            "type": "boolean"
          },
          "proxy_user_is_strict_security": {
            "example": false,
            "type": "boolean"
          },
          "proxy_user_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "proxy_user_metadata": {
            "example": {
              "resell_order_id": "APPL-9876-5432"
            },
            "properties": {},
            "type": "object"
          },
          "proxy_user_password": {
            "example": "apple1984",
            "type": "string"
          },
          "proxy_user_residential_bytes_limit": {
            "example": 134142432,
            "type": "integer"
          },
          "proxy_user_residential_bytes_used": {
            "example": 31223,
            "type": "integer"
          },
          "restricted_service_ids": {
            "items": {
              "example": "111-230-892",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProxyUserSuccessfulDeleteResponse": {
        "description": "Proxy User deletion was successful.",
        "example": {
          "deleted": [
            "stevejobs"
          ],
          "message": "Proxy User deletion successful."
        },
        "properties": {
          "deleted": {
            "description": "Array of deleted Proxy User IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "message": {
            "description": "Status message for the deletion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyUserSuccessfulRetrieveResponse": {
        "description": "Proxy User retrieve was successful.",
        "example": {
          "data": {
            "customer_id": 1955,
            "ip_address_authentications": [
              "17.172.224.47"
            ],
            "proxy_user_creation_datetime": "2023-09-28 12:34:56",
            "proxy_user_id": "stevejobs",
            "proxy_user_ip_address_authentication_limit": 3,
            "proxy_user_is_default": false,
            "proxy_user_is_deleted": false,
            "proxy_user_is_service_restricted": false,
            "proxy_user_is_strict_security": false,
            "proxy_user_last_update_datetime": "2023-09-28 12:34:56",
            "proxy_user_metadata": {
              "resell_order_id": "APPL-9876-5432"
            },
            "proxy_user_password": "apple1984",
            "proxy_user_residential_bytes_limit": 134142432,
            "proxy_user_residential_bytes_used": 31223,
            "restricted_service_ids": [
              "111-230-892"
            ]
          },
          "message": "Proxy User successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Proxy User item details.",
            "properties": {
              "customer_id": {
                "example": 1955,
                "type": "integer"
              },
              "ip_address_authentications": {
                "items": {
                  "example": "17.172.224.47",
                  "type": "string"
                },
                "type": "array"
              },
              "proxy_user_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "proxy_user_id": {
                "example": "stevejobs",
                "type": "string"
              },
              "proxy_user_ip_address_authentication_limit": {
                "example": 3,
                "type": "integer"
              },
              "proxy_user_is_default": {
                "example": false,
                "type": "boolean"
              },
              "proxy_user_is_deleted": {
                "example": false,
                "type": "boolean"
              },
              "proxy_user_is_service_restricted": {
                "example": false,
                "type": "boolean"
              },
              "proxy_user_is_strict_security": {
                "example": false,
                "type": "boolean"
              },
              "proxy_user_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "proxy_user_metadata": {
                "example": {
                  "resell_order_id": "APPL-9876-5432"
                },
                "properties": {},
                "type": "object"
              },
              "proxy_user_password": {
                "example": "apple1984",
                "type": "string"
              },
              "proxy_user_residential_bytes_limit": {
                "example": 134142432,
                "type": "integer"
              },
              "proxy_user_residential_bytes_used": {
                "example": 31223,
                "type": "integer"
              },
              "restricted_service_ids": {
                "items": {
                  "example": "111-230-892",
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyUserSuccessfulSearchResponse": {
        "description": "Proxy User search was successful.",
        "example": {
          "data": [
            {
              "customer_id": 1955,
              "ip_address_authentications": [
                "17.172.224.47"
              ],
              "proxy_user_creation_datetime": "2023-09-28 12:34:56",
              "proxy_user_id": "stevejobs",
              "proxy_user_ip_address_authentication_limit": 3,
              "proxy_user_is_default": false,
              "proxy_user_is_deleted": false,
              "proxy_user_is_service_restricted": false,
              "proxy_user_is_strict_security": false,
              "proxy_user_last_update_datetime": "2023-09-28 12:34:56",
              "proxy_user_metadata": {
                "resell_order_id": "APPL-9876-5432"
              },
              "proxy_user_password": "apple1984",
              "proxy_user_residential_bytes_limit": 134142432,
              "proxy_user_residential_bytes_used": 31223,
              "restricted_service_ids": [
                "111-230-892"
              ]
            }
          ],
          "item_count": 1,
          "message": "Proxy User search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Proxy User items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "customer_id": {
                  "example": 1955,
                  "type": "integer"
                },
                "ip_address_authentications": {
                  "items": {
                    "example": "17.172.224.47",
                    "type": "string"
                  },
                  "type": "array"
                },
                "proxy_user_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "proxy_user_id": {
                  "example": "stevejobs",
                  "type": "string"
                },
                "proxy_user_ip_address_authentication_limit": {
                  "example": 3,
                  "type": "integer"
                },
                "proxy_user_is_default": {
                  "example": false,
                  "type": "boolean"
                },
                "proxy_user_is_deleted": {
                  "example": false,
                  "type": "boolean"
                },
                "proxy_user_is_service_restricted": {
                  "example": false,
                  "type": "boolean"
                },
                "proxy_user_is_strict_security": {
                  "example": false,
                  "type": "boolean"
                },
                "proxy_user_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "proxy_user_metadata": {
                  "example": {
                    "resell_order_id": "APPL-9876-5432"
                  },
                  "properties": {},
                  "type": "object"
                },
                "proxy_user_password": {
                  "example": "apple1984",
                  "type": "string"
                },
                "proxy_user_residential_bytes_limit": {
                  "example": 134142432,
                  "type": "integer"
                },
                "proxy_user_residential_bytes_used": {
                  "example": 31223,
                  "type": "integer"
                },
                "restricted_service_ids": {
                  "items": {
                    "example": "111-230-892",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Proxy User items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Proxy User items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Proxy User items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResidentialLedger": {
        "properties": {
          "customer_id": {
            "example": 1955,
            "type": "integer"
          },
          "residential_ledger_bytes": {
            "example": 128290101,
            "type": "integer"
          },
          "residential_ledger_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "residential_ledger_id": {
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "type": "string"
          },
          "residential_ledger_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "residential_ledger_period_date": {
            "example": "2023-10-01",
            "type": "string"
          },
          "residential_ledger_reason": {
            "example": "top_up",
            "type": "string"
          },
          "residential_ledger_requests": {
            "example": 1244,
            "type": "integer"
          },
          "service_adjustment_id": {
            "example": 10,
            "type": "integer"
          },
          "service_id": {
            "example": "API-1234-5678",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResidentialLedgerSuccessfulRetrieveResponse": {
        "description": "Residential Ledger retrieve was successful.",
        "example": {
          "data": {
            "customer_id": 1955,
            "residential_ledger_bytes": 128290101,
            "residential_ledger_creation_datetime": "2023-04-01 12:00:00",
            "residential_ledger_id": "123e4567-e89b-12d3-a456-426614174000",
            "residential_ledger_last_update_datetime": "2023-04-02 12:00:00",
            "residential_ledger_period_date": "2023-10-01",
            "residential_ledger_reason": "top_up",
            "residential_ledger_requests": 1244,
            "service_adjustment_id": 10,
            "service_id": "API-1234-5678"
          },
          "message": "Residential Ledger successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Residential Ledger item details.",
            "properties": {
              "customer_id": {
                "example": 1955,
                "type": "integer"
              },
              "residential_ledger_bytes": {
                "example": 128290101,
                "type": "integer"
              },
              "residential_ledger_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "residential_ledger_id": {
                "example": "123e4567-e89b-12d3-a456-426614174000",
                "type": "string"
              },
              "residential_ledger_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "residential_ledger_period_date": {
                "example": "2023-10-01",
                "type": "string"
              },
              "residential_ledger_reason": {
                "example": "top_up",
                "type": "string"
              },
              "residential_ledger_requests": {
                "example": 1244,
                "type": "integer"
              },
              "service_adjustment_id": {
                "example": 10,
                "type": "integer"
              },
              "service_id": {
                "example": "API-1234-5678",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResidentialLedgerSuccessfulSearchResponse": {
        "description": "Residential Ledger search was successful.",
        "example": {
          "data": [
            {
              "customer_id": 1955,
              "residential_ledger_bytes": 128290101,
              "residential_ledger_creation_datetime": "2023-04-01 12:00:00",
              "residential_ledger_id": "123e4567-e89b-12d3-a456-426614174000",
              "residential_ledger_last_update_datetime": "2023-04-02 12:00:00",
              "residential_ledger_period_date": "2023-10-01",
              "residential_ledger_reason": "top_up",
              "residential_ledger_requests": 1244,
              "service_adjustment_id": 10,
              "service_id": "API-1234-5678"
            }
          ],
          "item_count": 1,
          "message": "Residential Ledger search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Residential Ledger items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "customer_id": {
                  "example": 1955,
                  "type": "integer"
                },
                "residential_ledger_bytes": {
                  "example": 128290101,
                  "type": "integer"
                },
                "residential_ledger_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "residential_ledger_id": {
                  "example": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "string"
                },
                "residential_ledger_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "residential_ledger_period_date": {
                  "example": "2023-10-01",
                  "type": "string"
                },
                "residential_ledger_reason": {
                  "example": "top_up",
                  "type": "string"
                },
                "residential_ledger_requests": {
                  "example": 1244,
                  "type": "integer"
                },
                "service_adjustment_id": {
                  "example": 10,
                  "type": "integer"
                },
                "service_id": {
                  "example": "API-1234-5678",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Residential Ledger items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Residential Ledger items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Residential Ledger items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Service": {
        "properties": {
          "country_id": {
            "example": "us",
            "type": "string"
          },
          "payment_method_id": {
            "example": "pm_1NjyqfB2BUlqim5l2LgRUo0a",
            "type": "string"
          },
          "service_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_cycle": {
            "example": "1:month",
            "type": "string"
          },
          "service_dispatch_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_earliest_cancellation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_expiry_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_id": {
            "example": "API-1234-5678",
            "type": "string"
          },
          "service_image": {
            "example": "https://apple.com/image.png",
            "type": "string"
          },
          "service_is_automatic_collection": {
            "example": true,
            "type": "boolean"
          },
          "service_is_pending_cancellation": {
            "example": false,
            "type": "boolean"
          },
          "service_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_metadata": {
            "example": {
              "resell_customer_id": "APPL-9876-5432"
            },
            "properties": {},
            "type": "object"
          },
          "service_name": {
            "example": "Premium ISP",
            "type": "string"
          },
          "service_promotional_code": {
            "example": "PROMO2023",
            "type": "string"
          },
          "service_protocol": {
            "enum": [
              "ipv4",
              "ipv6",
              "dual"
            ],
            "example": "ipv4",
            "type": "string"
          },
          "service_quantity": {
            "example": 5,
            "type": "integer"
          },
          "service_status": {
            "enum": [
              "awaiting_manual_fulfillment",
              "awaiting_additional_fulfillment",
              "awaiting_fulfillment",
              "active",
              "canceled",
              "complete",
              "paused",
              "overdue"
            ],
            "example": "active",
            "type": "string"
          },
          "service_subscription_id": {
            "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
            "type": "string"
          },
          "service_subscription_is_paused": {
            "example": false,
            "type": "boolean"
          },
          "service_total": {
            "example": 100,
            "type": "integer"
          },
          "service_type": {
            "enum": [
              "datacenter",
              "isp",
              "residential",
              "off_catalog"
            ],
            "example": "isp",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAdjustment": {
        "properties": {
          "invoice_id": {
            "example": "in_1NpRIvB2BUlqim5lN4v3URka",
            "type": "string"
          },
          "service_adjustment_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_adjustment_eval": {
            "example": {
              "service_expiry_datetime": [
                "2023-09-14 18:30:00",
                "2024-09-14 18:30:00"
              ]
            },
            "properties": {},
            "type": "object"
          },
          "service_adjustment_id": {
            "example": 213,
            "type": "integer"
          },
          "service_adjustment_is_administrator": {
            "example": false,
            "type": "boolean"
          },
          "service_adjustment_is_automatic": {
            "example": true,
            "type": "boolean"
          },
          "service_adjustment_is_customer": {
            "example": true,
            "type": "boolean"
          },
          "service_adjustment_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "service_adjustment_post": {
            "example": {
              "service_expiry_datetime": "2024-09-14 18:30:00"
            },
            "properties": {},
            "type": "object"
          },
          "service_adjustment_pre": {
            "example": {
              "service_expiry_datetime": "2023-09-14 18:30:00"
            },
            "properties": {},
            "type": "object"
          },
          "service_adjustment_status": {
            "enum": [
              "complete",
              "pending",
              "failed"
            ],
            "example": "complete",
            "type": "string"
          },
          "service_adjustment_type": {
            "enum": [
              "ingestion",
              "fulfillment",
              "remove_proxy",
              "additional_fulfillment",
              "update",
              "proxy_replacement",
              "extension",
              "top_up",
              "top_up_and_extension",
              "cancel"
            ],
            "example": "extension",
            "type": "string"
          },
          "service_id": {
            "example": "API-1234-5678",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAdjustmentSuccessfulRetrieveResponse": {
        "description": "Service Adjustment retrieve was successful.",
        "example": {
          "data": {
            "invoice_id": "in_1NpRIvB2BUlqim5lN4v3URka",
            "service_adjustment_creation_datetime": "2023-09-14 18:30:00",
            "service_adjustment_eval": {
              "service_expiry_datetime": [
                "2023-09-14 18:30:00",
                "2024-09-14 18:30:00"
              ]
            },
            "service_adjustment_id": 213,
            "service_adjustment_is_administrator": false,
            "service_adjustment_is_automatic": true,
            "service_adjustment_is_customer": true,
            "service_adjustment_last_update_datetime": "2023-09-15 18:30:00",
            "service_adjustment_post": {
              "service_expiry_datetime": "2024-09-14 18:30:00"
            },
            "service_adjustment_pre": {
              "service_expiry_datetime": "2023-09-14 18:30:00"
            },
            "service_adjustment_status": "complete",
            "service_adjustment_type": "extension",
            "service_id": "API-1234-5678"
          },
          "message": "Service Adjustment successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Service Adjustment item details.",
            "properties": {
              "invoice_id": {
                "example": "in_1NpRIvB2BUlqim5lN4v3URka",
                "type": "string"
              },
              "service_adjustment_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_adjustment_eval": {
                "example": {
                  "service_expiry_datetime": [
                    "2023-09-14 18:30:00",
                    "2024-09-14 18:30:00"
                  ]
                },
                "properties": {},
                "type": "object"
              },
              "service_adjustment_id": {
                "example": 213,
                "type": "integer"
              },
              "service_adjustment_is_administrator": {
                "example": false,
                "type": "boolean"
              },
              "service_adjustment_is_automatic": {
                "example": true,
                "type": "boolean"
              },
              "service_adjustment_is_customer": {
                "example": true,
                "type": "boolean"
              },
              "service_adjustment_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_adjustment_post": {
                "example": {
                  "service_expiry_datetime": "2024-09-14 18:30:00"
                },
                "properties": {},
                "type": "object"
              },
              "service_adjustment_pre": {
                "example": {
                  "service_expiry_datetime": "2023-09-14 18:30:00"
                },
                "properties": {},
                "type": "object"
              },
              "service_adjustment_status": {
                "enum": [
                  "complete",
                  "pending",
                  "failed"
                ],
                "example": "complete",
                "type": "string"
              },
              "service_adjustment_type": {
                "enum": [
                  "ingestion",
                  "fulfillment",
                  "remove_proxy",
                  "additional_fulfillment",
                  "update",
                  "proxy_replacement",
                  "extension",
                  "top_up",
                  "top_up_and_extension",
                  "cancel"
                ],
                "example": "extension",
                "type": "string"
              },
              "service_id": {
                "example": "API-1234-5678",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAdjustmentSuccessfulSearchResponse": {
        "description": "Service Adjustment search was successful.",
        "example": {
          "data": [
            {
              "invoice_id": "in_1NpRIvB2BUlqim5lN4v3URka",
              "service_adjustment_creation_datetime": "2023-09-14 18:30:00",
              "service_adjustment_eval": {
                "service_expiry_datetime": [
                  "2023-09-14 18:30:00",
                  "2024-09-14 18:30:00"
                ]
              },
              "service_adjustment_id": 213,
              "service_adjustment_is_administrator": false,
              "service_adjustment_is_automatic": true,
              "service_adjustment_is_customer": true,
              "service_adjustment_last_update_datetime": "2023-09-15 18:30:00",
              "service_adjustment_post": {
                "service_expiry_datetime": "2024-09-14 18:30:00"
              },
              "service_adjustment_pre": {
                "service_expiry_datetime": "2023-09-14 18:30:00"
              },
              "service_adjustment_status": "complete",
              "service_adjustment_type": "extension",
              "service_id": "API-1234-5678"
            }
          ],
          "item_count": 1,
          "message": "Service Adjustment search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Service Adjustment items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "invoice_id": {
                  "example": "in_1NpRIvB2BUlqim5lN4v3URka",
                  "type": "string"
                },
                "service_adjustment_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_adjustment_eval": {
                  "example": {
                    "service_expiry_datetime": [
                      "2023-09-14 18:30:00",
                      "2024-09-14 18:30:00"
                    ]
                  },
                  "properties": {},
                  "type": "object"
                },
                "service_adjustment_id": {
                  "example": 213,
                  "type": "integer"
                },
                "service_adjustment_is_administrator": {
                  "example": false,
                  "type": "boolean"
                },
                "service_adjustment_is_automatic": {
                  "example": true,
                  "type": "boolean"
                },
                "service_adjustment_is_customer": {
                  "example": true,
                  "type": "boolean"
                },
                "service_adjustment_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_adjustment_post": {
                  "example": {
                    "service_expiry_datetime": "2024-09-14 18:30:00"
                  },
                  "properties": {},
                  "type": "object"
                },
                "service_adjustment_pre": {
                  "example": {
                    "service_expiry_datetime": "2023-09-14 18:30:00"
                  },
                  "properties": {},
                  "type": "object"
                },
                "service_adjustment_status": {
                  "enum": [
                    "complete",
                    "pending",
                    "failed"
                  ],
                  "example": "complete",
                  "type": "string"
                },
                "service_adjustment_type": {
                  "enum": [
                    "ingestion",
                    "fulfillment",
                    "remove_proxy",
                    "additional_fulfillment",
                    "update",
                    "proxy_replacement",
                    "extension",
                    "top_up",
                    "top_up_and_extension",
                    "cancel"
                  ],
                  "example": "extension",
                  "type": "string"
                },
                "service_id": {
                  "example": "API-1234-5678",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Service Adjustment items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Service Adjustment items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Service Adjustment items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServiceSuccessfulRetrieveResponse": {
        "description": "Service retrieve was successful.",
        "example": {
          "data": {
            "country_id": "us",
            "payment_method_id": "pm_1NjyqfB2BUlqim5l2LgRUo0a",
            "service_creation_datetime": "2023-09-12 10:00:00",
            "service_cycle": "1:month",
            "service_dispatch_datetime": "2023-09-12 11:00:00",
            "service_earliest_cancellation_datetime": "2023-09-12 12:00:00",
            "service_expiry_datetime": "2023-10-12 10:00:00",
            "service_id": "API-1234-5678",
            "service_image": "https://apple.com/image.png",
            "service_is_automatic_collection": true,
            "service_is_pending_cancellation": false,
            "service_last_update_datetime": "2023-09-12 12:00:00",
            "service_metadata": {
              "resell_customer_id": "APPL-9876-5432"
            },
            "service_name": "Premium ISP",
            "service_promotional_code": "PROMO2023",
            "service_protocol": "ipv4",
            "service_quantity": 5,
            "service_status": "active",
            "service_subscription_id": "sub_1NpPVfB2BUlqim5lA374YoIh",
            "service_subscription_is_paused": false,
            "service_total": 100,
            "service_type": "isp"
          },
          "message": "Service successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Service item details.",
            "properties": {
              "country_id": {
                "example": "us",
                "type": "string"
              },
              "payment_method_id": {
                "example": "pm_1NjyqfB2BUlqim5l2LgRUo0a",
                "type": "string"
              },
              "service_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_cycle": {
                "example": "1:month",
                "type": "string"
              },
              "service_dispatch_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_earliest_cancellation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_expiry_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_id": {
                "example": "API-1234-5678",
                "type": "string"
              },
              "service_image": {
                "example": "https://apple.com/image.png",
                "type": "string"
              },
              "service_is_automatic_collection": {
                "example": true,
                "type": "boolean"
              },
              "service_is_pending_cancellation": {
                "example": false,
                "type": "boolean"
              },
              "service_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "service_metadata": {
                "example": {
                  "resell_customer_id": "APPL-9876-5432"
                },
                "properties": {},
                "type": "object"
              },
              "service_name": {
                "example": "Premium ISP",
                "type": "string"
              },
              "service_promotional_code": {
                "example": "PROMO2023",
                "type": "string"
              },
              "service_protocol": {
                "enum": [
                  "ipv4",
                  "ipv6",
                  "dual"
                ],
                "example": "ipv4",
                "type": "string"
              },
              "service_quantity": {
                "example": 5,
                "type": "integer"
              },
              "service_status": {
                "enum": [
                  "awaiting_manual_fulfillment",
                  "awaiting_additional_fulfillment",
                  "awaiting_fulfillment",
                  "active",
                  "canceled",
                  "complete",
                  "paused",
                  "overdue"
                ],
                "example": "active",
                "type": "string"
              },
              "service_subscription_id": {
                "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
                "type": "string"
              },
              "service_subscription_is_paused": {
                "example": false,
                "type": "boolean"
              },
              "service_total": {
                "example": 100,
                "type": "integer"
              },
              "service_type": {
                "enum": [
                  "datacenter",
                  "isp",
                  "residential",
                  "off_catalog"
                ],
                "example": "isp",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceSuccessfulSearchResponse": {
        "description": "Service search was successful.",
        "example": {
          "data": [
            {
              "country_id": "us",
              "payment_method_id": "pm_1NjyqfB2BUlqim5l2LgRUo0a",
              "service_creation_datetime": "2023-09-12 10:00:00",
              "service_cycle": "1:month",
              "service_dispatch_datetime": "2023-09-12 11:00:00",
              "service_earliest_cancellation_datetime": "2023-09-12 12:00:00",
              "service_expiry_datetime": "2023-10-12 10:00:00",
              "service_id": "API-1234-5678",
              "service_image": "https://apple.com/image.png",
              "service_is_automatic_collection": true,
              "service_is_pending_cancellation": false,
              "service_last_update_datetime": "2023-09-12 12:00:00",
              "service_metadata": {
                "resell_customer_id": "APPL-9876-5432"
              },
              "service_name": "Premium ISP",
              "service_promotional_code": "PROMO2023",
              "service_protocol": "ipv4",
              "service_quantity": 5,
              "service_status": "active",
              "service_subscription_id": "sub_1NpPVfB2BUlqim5lA374YoIh",
              "service_subscription_is_paused": false,
              "service_total": 100,
              "service_type": "isp"
            }
          ],
          "item_count": 1,
          "message": "Service search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Service items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "country_id": {
                  "example": "us",
                  "type": "string"
                },
                "payment_method_id": {
                  "example": "pm_1NjyqfB2BUlqim5l2LgRUo0a",
                  "type": "string"
                },
                "service_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_cycle": {
                  "example": "1:month",
                  "type": "string"
                },
                "service_dispatch_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_earliest_cancellation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_expiry_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_id": {
                  "example": "API-1234-5678",
                  "type": "string"
                },
                "service_image": {
                  "example": "https://apple.com/image.png",
                  "type": "string"
                },
                "service_is_automatic_collection": {
                  "example": true,
                  "type": "boolean"
                },
                "service_is_pending_cancellation": {
                  "example": false,
                  "type": "boolean"
                },
                "service_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "service_metadata": {
                  "example": {
                    "resell_customer_id": "APPL-9876-5432"
                  },
                  "properties": {},
                  "type": "object"
                },
                "service_name": {
                  "example": "Premium ISP",
                  "type": "string"
                },
                "service_promotional_code": {
                  "example": "PROMO2023",
                  "type": "string"
                },
                "service_protocol": {
                  "enum": [
                    "ipv4",
                    "ipv6",
                    "dual"
                  ],
                  "example": "ipv4",
                  "type": "string"
                },
                "service_quantity": {
                  "example": 5,
                  "type": "integer"
                },
                "service_status": {
                  "enum": [
                    "awaiting_manual_fulfillment",
                    "awaiting_additional_fulfillment",
                    "awaiting_fulfillment",
                    "active",
                    "canceled",
                    "complete",
                    "paused",
                    "overdue"
                  ],
                  "example": "active",
                  "type": "string"
                },
                "service_subscription_id": {
                  "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
                  "type": "string"
                },
                "service_subscription_is_paused": {
                  "example": false,
                  "type": "boolean"
                },
                "service_total": {
                  "example": 100,
                  "type": "integer"
                },
                "service_type": {
                  "enum": [
                    "datacenter",
                    "isp",
                    "residential",
                    "off_catalog"
                  ],
                  "example": "isp",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Service items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Service items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Service items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Subdivision": {
        "properties": {
          "country_id": {
            "example": "fr",
            "type": "string"
          },
          "subdivision_alias": {
            "example": "fr_idf",
            "type": "string"
          },
          "subdivision_id": {
            "example": "fr-idf",
            "type": "string"
          },
          "subdivision_name": {
            "example": "\u00cele-de-France",
            "type": "string"
          },
          "subdivision_node_count": {
            "example": 1345,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SubdivisionSuccessfulRetrieveResponse": {
        "description": "Subdivision retrieve was successful.",
        "example": {
          "data": {
            "country_id": "fr",
            "subdivision_alias": "fr_idf",
            "subdivision_id": "fr-idf",
            "subdivision_name": "\u00cele-de-France",
            "subdivision_node_count": 1345
          },
          "message": "Subdivision successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Subdivision item details.",
            "properties": {
              "country_id": {
                "example": "fr",
                "type": "string"
              },
              "subdivision_alias": {
                "example": "fr_idf",
                "type": "string"
              },
              "subdivision_id": {
                "example": "fr-idf",
                "type": "string"
              },
              "subdivision_name": {
                "example": "\u00cele-de-France",
                "type": "string"
              },
              "subdivision_node_count": {
                "example": 1345,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubdivisionSuccessfulSearchResponse": {
        "description": "Subdivision search was successful.",
        "example": {
          "data": [
            {
              "country_id": "fr",
              "subdivision_alias": "fr_idf",
              "subdivision_id": "fr-idf",
              "subdivision_name": "\u00cele-de-France",
              "subdivision_node_count": 1345
            }
          ],
          "item_count": 1,
          "message": "Subdivision search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Subdivision items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "country_id": {
                  "example": "fr",
                  "type": "string"
                },
                "subdivision_alias": {
                  "example": "fr_idf",
                  "type": "string"
                },
                "subdivision_id": {
                  "example": "fr-idf",
                  "type": "string"
                },
                "subdivision_name": {
                  "example": "\u00cele-de-France",
                  "type": "string"
                },
                "subdivision_node_count": {
                  "example": 1345,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Subdivision items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Subdivision items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Subdivision items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SubscriptionSchedule": {
        "properties": {
          "service_subscription_id": {
            "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
            "type": "string"
          },
          "subscription_schedule_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "subscription_schedule_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "subscription_schedule_id": {
            "example": "sub_sched_1O9pdJB2BUlqim5lARQ3T9km",
            "type": "string"
          },
          "subscription_schedule_is_administrator": {
            "example": false,
            "type": "boolean"
          },
          "subscription_schedule_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "subscription_schedule_status": {
            "enum": [
              "not_started",
              "active",
              "completed",
              "released",
              "canceled"
            ],
            "example": "active",
            "type": "string"
          },
          "subscription_schedule_type": {
            "enum": [
              "end_of_introductory_offer",
              "change_price",
              "increase_quantity",
              "decrease_quantity",
              "increase_quantity_change_price",
              "decrease_quantity_change_price"
            ],
            "example": "upgrade",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionScheduleSuccessfulDeleteResponse": {
        "description": "Subscription Schedule deletion was successful.",
        "example": {
          "deleted": [
            "sub_sched_1O9pdJB2BUlqim5lARQ3T9km"
          ],
          "message": "Subscription Schedule deletion successful."
        },
        "properties": {
          "deleted": {
            "description": "Array of deleted Subscription Schedule IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "message": {
            "description": "Status message for the deletion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionScheduleSuccessfulRetrieveResponse": {
        "description": "Subscription Schedule retrieve was successful.",
        "example": {
          "data": {
            "service_subscription_id": "sub_1NpPVfB2BUlqim5lA374YoIh",
            "subscription_schedule_creation_datetime": "2023-09-12 10:00:00",
            "subscription_schedule_datetime": "2023-09-15 10:00:00",
            "subscription_schedule_id": "sub_sched_1O9pdJB2BUlqim5lARQ3T9km",
            "subscription_schedule_is_administrator": false,
            "subscription_schedule_last_update_datetime": "2023-09-12 12:00:00",
            "subscription_schedule_status": "active",
            "subscription_schedule_type": "upgrade"
          },
          "message": "Subscription Schedule successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Subscription Schedule item details.",
            "properties": {
              "service_subscription_id": {
                "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
                "type": "string"
              },
              "subscription_schedule_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "subscription_schedule_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "subscription_schedule_id": {
                "example": "sub_sched_1O9pdJB2BUlqim5lARQ3T9km",
                "type": "string"
              },
              "subscription_schedule_is_administrator": {
                "example": false,
                "type": "boolean"
              },
              "subscription_schedule_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "subscription_schedule_status": {
                "enum": [
                  "not_started",
                  "active",
                  "completed",
                  "released",
                  "canceled"
                ],
                "example": "active",
                "type": "string"
              },
              "subscription_schedule_type": {
                "enum": [
                  "end_of_introductory_offer",
                  "change_price",
                  "increase_quantity",
                  "decrease_quantity",
                  "increase_quantity_change_price",
                  "decrease_quantity_change_price"
                ],
                "example": "upgrade",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionScheduleSuccessfulSearchResponse": {
        "description": "Subscription Schedule search was successful.",
        "example": {
          "data": [
            {
              "service_subscription_id": "sub_1NpPVfB2BUlqim5lA374YoIh",
              "subscription_schedule_creation_datetime": "2023-09-12 10:00:00",
              "subscription_schedule_datetime": "2023-09-15 10:00:00",
              "subscription_schedule_id": "sub_sched_1O9pdJB2BUlqim5lARQ3T9km",
              "subscription_schedule_is_administrator": false,
              "subscription_schedule_last_update_datetime": "2023-09-12 12:00:00",
              "subscription_schedule_status": "active",
              "subscription_schedule_type": "upgrade"
            }
          ],
          "item_count": 1,
          "message": "Subscription Schedule search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Subscription Schedule items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "service_subscription_id": {
                  "example": "sub_1NpPVfB2BUlqim5lA374YoIh",
                  "type": "string"
                },
                "subscription_schedule_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "subscription_schedule_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "subscription_schedule_id": {
                  "example": "sub_sched_1O9pdJB2BUlqim5lARQ3T9km",
                  "type": "string"
                },
                "subscription_schedule_is_administrator": {
                  "example": false,
                  "type": "boolean"
                },
                "subscription_schedule_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "subscription_schedule_status": {
                  "enum": [
                    "not_started",
                    "active",
                    "completed",
                    "released",
                    "canceled"
                  ],
                  "example": "active",
                  "type": "string"
                },
                "subscription_schedule_type": {
                  "enum": [
                    "end_of_introductory_offer",
                    "change_price",
                    "increase_quantity",
                    "decrease_quantity",
                    "increase_quantity_change_price",
                    "decrease_quantity_change_price"
                  ],
                  "example": "upgrade",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Subscription Schedule items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Subscription Schedule items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Subscription Schedule items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TwoFactorAuthenticationRequired": {
        "description": "Two-Factor Authentication Required",
        "example": {
          "error": "Two-Factor Authentication Required",
          "message": "This action requires Two-Factor Authentication. Please retry request with Two-Factor Authentication keys.",
          "two_factor_authentication_public_key": "1234567890",
          "two_factor_authentication_service": "email",
          "two_factor_authentication_target": "e******@pingproxies.com"
        },
        "properties": {
          "error": {
            "description": "Error type",
            "example": "Two Factor Authentication Required",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "Please retry request with Two-Factor Authentication keys.",
            "type": "string"
          },
          "two_factor_authentication_public_key": {
            "description": "Public key for Two-Factor Authentication.",
            "example": "1234567890",
            "type": "string"
          },
          "two_factor_authentication_service": {
            "description": "Service used for Two-Factor Authentication.",
            "example": "email",
            "type": "string"
          },
          "two_factor_authentication_target": {
            "description": "The target which the two_factor_authentication_private_key has been sent to.",
            "example": "e******@pingproxies.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UnauthorizedResponse": {
        "description": "Unauthorized",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Unauthorized",
          "message": "You need to be authenticated to access this resource."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "You need to be authenticated to access this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UnprocessableResponse": {
        "description": "Unprocessable",
        "example": {
          "api_request_id": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
          "error": "Unprocessable",
          "message": "The data provided is valid but can't be processed due to failing business logic."
        },
        "properties": {
          "api_request_id": {
            "description": "Error ID",
            "example": "0a5a76aa-e286-477b-b88f-e5b492a0ba70",
            "type": "string"
          },
          "error": {
            "description": "Error type",
            "example": "Unprocessable",
            "type": "string"
          },
          "message": {
            "description": "Description of the error",
            "example": "The data provided is valid but can't be processed due to failing business logic.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ZipCode": {
        "properties": {
          "subdivision_id": {
            "example": "ru-irk",
            "type": "string"
          },
          "zip_code_alias": {
            "example": "kt3",
            "type": "string"
          },
          "zip_code_creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "zip_code_id": {
            "example": 123,
            "type": "integer"
          },
          "zip_code_last_update_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "zip_code_node_count": {
            "example": 1234,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ZipCodeSuccessfulRetrieveResponse": {
        "description": "Zip Code retrieve was successful.",
        "example": {
          "data": {
            "subdivision_id": "ru-irk",
            "zip_code_alias": "kt3",
            "zip_code_id": 123,
            "zip_code_node_count": 1234
          },
          "message": "Zip Code successfully retrieved."
        },
        "properties": {
          "data": {
            "description": "Retrieved Zip Code item details.",
            "properties": {
              "subdivision_id": {
                "example": "ru-irk",
                "type": "string"
              },
              "zip_code_alias": {
                "example": "kt3",
                "type": "string"
              },
              "zip_code_creation_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "zip_code_id": {
                "example": 123,
                "type": "integer"
              },
              "zip_code_last_update_datetime": {
                "format": "date-time",
                "type": "string"
              },
              "zip_code_node_count": {
                "example": 1234,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "message": {
            "description": "Status message for the retrieval.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ZipCodeSuccessfulSearchResponse": {
        "description": "Zip Code search was successful.",
        "example": {
          "data": [
            {
              "subdivision_id": "ru-irk",
              "zip_code_alias": "kt3",
              "zip_code_id": 123,
              "zip_code_node_count": 1234
            }
          ],
          "item_count": 1,
          "message": "Zip Code search successful.",
          "page": 1,
          "per_page": 10,
          "total_count": 1
        },
        "properties": {
          "data": {
            "description": "Array of Zip Code items matching the search criteria up to the limit of per_page paramater.",
            "items": {
              "properties": {
                "subdivision_id": {
                  "example": "ru-irk",
                  "type": "string"
                },
                "zip_code_alias": {
                  "example": "kt3",
                  "type": "string"
                },
                "zip_code_creation_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "zip_code_id": {
                  "example": 123,
                  "type": "integer"
                },
                "zip_code_last_update_datetime": {
                  "format": "date-time",
                  "type": "string"
                },
                "zip_code_node_count": {
                  "example": 1234,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "item_count": {
            "description": "Total number of Zip Code items returned in the data field.",
            "type": "integer"
          },
          "message": {
            "description": "Status message for the search.",
            "type": "string"
          },
          "page": {
            "description": "Current page number of the search results returned.",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of Zip Code items returned per page.",
            "type": "integer"
          },
          "total_count": {
            "description": "Total of Zip Code items that match the search filter.",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "APIPrivateKey": {
        "description": " Private API key for user-level authentication.",
        "in": "header",
        "name": "X-API-Private-Key",
        "type": "apiKey"
      },
      "APIPublicKey": {
        "description": " Public API key for user-level authentication.",
        "in": "header",
        "name": "X-API-Public-Key",
        "type": "apiKey"
      },
      "ApplicationAPIPrivateKey": {
        "description": "Private API key for application-level authentication.",
        "in": "header",
        "name": "X-Application-API-Private-Key",
        "type": "apiKey"
      },
      "ApplicationAPIPublicKey": {
        "description": "Public API key for application-level authentication.",
        "in": "header",
        "name": "X-Application-API-Public-Key",
        "type": "apiKey"
      },
      "BearerAuth": {
        "description": "JWT token provided in the 'Authorization' header for customer-level authentication. Format as: Bearer [token]",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "CookieAuth": {
        "description": "JWT token stored in a cookie named 'access_token_cookie' for customer-level authentication.",
        "in": "header",
        "name": "access_token_cookie",
        "type": "apiKey"
      },
      "GeofeedKey": {
        "description": "Geofeed key for object-level authentication.",
        "in": "header",
        "name": "X-Geofeed-Key",
        "type": "apiKey"
      },
      "ProxyHostserverAPIAuthenticationKey": {
        "description": "Authentication API key for specific ProxyHostserver.",
        "in": "header",
        "name": "X-ProxyHostserver-API-Authentication-Key",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "contact": {
      "email": "developer@pingproxies.com",
      "url": "https://pingproxies.com"
    },
    "description": "Public API used for third-party usage.",
    "termsOfService": "https://pingproxies.com",
    "title": "Ping Proxies Public User API",
    "version": "1.0",
    "x-logo": {
      "altText": "Ping Proxies",
      "backgroundColor": "#6354eb",
      "url": "https://pbs.twimg.com/profile_banners/1038803520605118464/1729783007/1500x500"
    }
  },
  "openapi": "3.0.1",
  "paths": {
    "/public/user/analytics/breakdown": {
      "get": {
        "description": "This endpoint analyzes proxy usage for a given customer within a specified time range\nand provides breakdowns by proxy users, hostnames, and network types.\n\nYou can either:\n\n1. Provide a \"preset\" parameter, which automatically sets the time period\n   (e.g. \"last_day\", \"last_hour\", etc.).\n2. OR, manually specify your own time range using period_start and period_end.\n\nYou can also filter by hostname, network, and proxy_user_id.\nHostname filters are disallowed if searching older than 90 days.\n",
        "parameters": [
          {
            "description": "If provided, overrides period_start and period_end. Must be one of [\"last_hour\", \"last_day\", \"last_week\", \"last_30_days\", \"last_60_days\", \"last_90_days\", \"last_year\"].\n",
            "in": "query",
            "name": "preset",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date for the analytics period. If not provided, defaults to 7 days ago.",
            "in": "query",
            "name": "period_start",
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "End date for the analytics period. If not provided, defaults to current time.",
            "in": "query",
            "name": "period_end",
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter results by specific hostname. Cannot be used for data older than 90 days.",
            "in": "query",
            "name": "hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter results by network type.",
            "in": "query",
            "name": "network",
            "schema": {
              "enum": [
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter results by proxy user ID. Must belong to the current customer.",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include proxy user data in response. Defaults to true.",
            "in": "query",
            "name": "return_proxy_users",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include hostname data in response. Defaults to true.",
            "in": "query",
            "name": "return_hostnames",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include network data in response. Defaults to true.",
            "in": "query",
            "name": "return_networks",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Field to sort results by, with optional _asc or _desc suffix to specify direction.",
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maximum number of results to return.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "hostnames": {
                          "description": "Breakdown by hostnames (if return_hostnames=true)",
                          "items": {
                            "properties": {
                              "bytes": {
                                "description": "Total bytes transferred for this hostname",
                                "type": "integer"
                              },
                              "hostname": {
                                "description": "The hostname requested",
                                "type": "string"
                              },
                              "requests": {
                                "description": "Total number of requests to this hostname",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "networks": {
                          "description": "Breakdown by network types (if return_networks=true)",
                          "items": {
                            "properties": {
                              "bytes": {
                                "description": "Total bytes transferred through this network",
                                "type": "integer"
                              },
                              "network": {
                                "description": "Type of network",
                                "enum": [
                                  "datacenter",
                                  "isp",
                                  "residential"
                                ],
                                "type": "string"
                              },
                              "requests": {
                                "description": "Total number of requests made through this network",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "proxy_user_ids": {
                          "description": "Breakdown by proxy users (if return_proxy_users=true)",
                          "items": {
                            "properties": {
                              "bytes": {
                                "description": "Total bytes transferred by this proxy user",
                                "type": "integer"
                              },
                              "proxy_user_id": {
                                "description": "ID of the proxy user",
                                "type": "string"
                              },
                              "requests": {
                                "description": "Total number of requests made by this proxy user",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_bytes": {
                          "description": "Total number of requests in time period",
                          "type": "integer"
                        },
                        "total_requests": {
                          "description": "Total number of requests in time period",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Analytics breakdown successful",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Analytics breakdown successful."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Analytics Breakdown",
        "tags": [
          "Proxy Analytics"
        ]
      }
    },
    "/public/user/analytics/graph": {
      "get": {
        "description": "This endpoint analyzes proxy usage for a given customer within a specified time range\nand groups them by one of four discrete intervals: `minute`, `hour`, `day`, or `month`.\n\nYou can either\n\n1. Provide a `preset` parameter, which automatically sets period and interval\n   (e.g. `last_day`, `last_hour`, etc.)\n2. OR, manually specify your own time range (`period_start`, `period_end`) plus `interval`\n\nYou can also filter by `hostname`, `network`, `proxy_user_id`, and `service_id`.\nService ID can only be filtered if period is within 7 days and interval is hour or less.\nHostname filters are disallowed if searching older than 90 days.\n",
        "parameters": [
          {
            "description": "If provided, overrides period_start, period_end, and interval. Must be one of [\"last_hour\", \"last_day\", \"last_week\", \"last_30_days\", \"last_60_days\", \"last_90_days\", \"last_year\"].\n",
            "in": "query",
            "name": "preset",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "period_start",
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "period_end",
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "month"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "network",
            "schema": {
              "enum": [
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "intervals": {
                          "description": "An array of usage data grouped by the specified interval.",
                          "items": {
                            "properties": {
                              "bytes": {
                                "description": "Total bytes transferred in this interval.",
                                "example": 1102393,
                                "type": "integer"
                              },
                              "error": {
                                "description": "Number of failed requests in this interval.",
                                "example": 0,
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Exact timestamp (or date, if day/month) representing the interval start.",
                                "example": "2025-02-27 13:02:00",
                                "type": "string"
                              },
                              "interval_name": {
                                "description": "Human-friendly label for the interval.",
                                "example": "2025-02-27 13:02:00",
                                "type": "string"
                              },
                              "requests": {
                                "description": "Number of total requests in this interval.",
                                "example": 266,
                                "type": "integer"
                              },
                              "smartpath_money_saved": {
                                "description": "Total money in cents saved by Smartpath routing in this interval.",
                                "example": 0,
                                "type": "integer"
                              },
                              "smartpath_routed_bytes": {
                                "description": "Total bytes optimized by Smartpath in this interval.",
                                "example": 0,
                                "type": "integer"
                              },
                              "smartpath_routed_requests": {
                                "description": "Total requests optimized by Smartpath in this interval.",
                                "example": 0,
                                "type": "integer"
                              },
                              "successful": {
                                "description": "Number of successful requests in this interval.",
                                "example": 266,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_bytes": {
                          "description": "The sum of all data bytes transferred.",
                          "example": 1102393,
                          "type": "integer"
                        },
                        "total_error": {
                          "description": "The total number of failed requests.",
                          "example": 0,
                          "type": "integer"
                        },
                        "total_requests": {
                          "description": "The total number of requests made.",
                          "example": 266,
                          "type": "integer"
                        },
                        "total_smartpath_money_saved": {
                          "description": "Total money in cents saved by Smartpath routing.",
                          "example": 0,
                          "type": "integer"
                        },
                        "total_smartpath_routed_bytes": {
                          "description": "Total bytes optimized by Smartpath.",
                          "example": 0,
                          "type": "integer"
                        },
                        "total_smartpath_routed_requests": {
                          "description": "Total requests optimized by Smartpath.",
                          "example": 0,
                          "type": "integer"
                        },
                        "total_successful": {
                          "description": "The total number of successful requests.",
                          "example": 266,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "description": "A success message.",
                      "example": "Analytics graphing successful.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Analytics graphing successful."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Graph Proxy Analytics",
        "tags": [
          "Proxy Analytics"
        ]
      }
    },
    "/public/user/asn/retrieve/{asn_id}": {
      "get": {
        "description": "Retrieves a specific ASN.\n",
        "parameters": [
          {
            "description": "ID of the ASN to retrieve",
            "in": "path",
            "name": "asn_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AsnSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful ASN Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve ASN",
        "tags": [
          "ASN"
        ]
      }
    },
    "/public/user/asn/search": {
      "get": {
        "description": "Search Autonomous System Number (ASN) entries using various filters.\n",
        "parameters": [
          {
            "description": "Unique identifier of the ASN",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name associated with the ASN",
            "in": "query",
            "name": "asn_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Country identifier where the ASN is registered",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of the ASN (e.g., hosting, isp, business, etc.)",
            "in": "query",
            "name": "asn_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Regional Internet Registry (RIR) associated with the ASN",
            "in": "query",
            "name": "asn_rir",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Count of IP addresses associated with the ASN",
            "in": "query",
            "name": "asn_ip_address_count",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current number of online nodes in the ASN",
            "in": "query",
            "name": "asn_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AsnSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful ASN search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search ASN",
        "tags": [
          "ASN"
        ]
      }
    },
    "/public/user/checkout/catalog": {
      "get": {
        "description": "This endpoint returns a simplified product list that is both visible\nand enabled for API checkouts. It helps clients to quickly identify and\npurchase available products without any search or pagination parameters.\nIdeal for basic API-based purchasing.\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "additionalProperties": {
                        "properties": {
                          "country_id": {
                            "description": "The ISO country code for the product.",
                            "example": "us",
                            "type": "string"
                          },
                          "product_cycle_options": {
                            "description": "List of subscription cycles available.",
                            "example": [
                              "1:month",
                              "3:month",
                              "1:year"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "product_is_available": {
                            "description": "Flag indicating if the product is currently available.",
                            "example": true,
                            "type": "boolean"
                          },
                          "product_is_per_ip": {
                            "description": "Specifies if the product is purchased on a per-IP basis.",
                            "example": true,
                            "type": "boolean"
                          },
                          "product_name": {
                            "description": "Human-readable name of the product.",
                            "example": "Datacenter Proxies [US]",
                            "type": "string"
                          },
                          "product_protocol": {
                            "description": "Network protocol used by the product (e.g., ipv4).",
                            "example": "ipv4",
                            "type": "string"
                          },
                          "product_stock": {
                            "description": "Number of units in stock.",
                            "example": 10,
                            "type": "integer"
                          },
                          "product_type": {
                            "description": "Type of product (e.g., isp, datacenter).",
                            "example": "datacenter",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "Object containing available products keyed by product ID",
                      "example": {
                        "datacenter_us": {
                          "country_id": "us",
                          "product_cycle_options": [
                            "1:month",
                            "3:month",
                            "1:year"
                          ],
                          "product_is_available": true,
                          "product_is_per_ip": true,
                          "product_name": "Datacenter Proxies [US]",
                          "product_protocol": "ipv4",
                          "product_stock": 10,
                          "product_type": "datacenter"
                        },
                        "isp_gb": {
                          "country_id": "gb",
                          "product_cycle_options": [
                            "1:month",
                            "3:month",
                            "1:year"
                          ],
                          "product_is_available": true,
                          "product_is_per_ip": true,
                          "product_name": "Static Residential ISP Proxies [GB]",
                          "product_protocol": "ipv4",
                          "product_stock": 181,
                          "product_type": "isp"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "description": "A success message.",
                      "example": "Checkout catalog successfully retrieved.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully retrieved the simplified checkout catalog."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Simplified Product Checkout Catalog",
        "tags": [
          "Checkout"
        ]
      }
    },
    "/public/user/checkout/create": {
      "post": {
        "description": "This endpoint creates a checkout for the authenticated user based on the provided data. It supports\ndifferent payment platforms, promotional codes, and can handle both one-time and recurring payments.\nYou can either specify a `product_code` directly or supply the traditional combination of\n`product_type`, `country_id`, and `product_protocol`.\n\n**Important considerations**\n- If `product_code` is provided alongside `product_type`/`country_id`/`product_protocol`, their values must match the actual product attributes.\n- If the invoice amount remaining is `0`, it means your available credit fully covered the cost and the service is considered immediately paid.\n- If the invoice needs payment, you will be returned an `invoice_url` to complete checkout.\n",
        "parameters": [
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "cycle_interval": "month",
                  "cycle_interval_count": 1,
                  "product_code": "isp_us",
                  "promotional_code": "HALFOFF",
                  "quantity": 5
                },
                "properties": {
                  "country_id": {
                    "description": "An ISO country code used for region-specific datacenter or ISP products.",
                    "type": "string"
                  },
                  "cycle_interval": {
                    "default": "month",
                    "description": "The billing interval for recurring purchases.",
                    "enum": [
                      "year",
                      "month",
                      "week",
                      "day"
                    ],
                    "type": "string"
                  },
                  "cycle_interval_count": {
                    "description": "The number of intervals for a recurring cycle (e.g. 1 month, 2 months, etc.).",
                    "type": "integer"
                  },
                  "product_code": {
                    "description": "A direct product code (e.g. \"datacenter_us\"). If this is provided, you do not need `product_type`, `country_id`, or `product_protocol`.",
                    "type": "string"
                  },
                  "product_protocol": {
                    "default": "ipv4",
                    "description": "The protocol of the product.",
                    "enum": [
                      "ipv4",
                      "ipv6",
                      "dual"
                    ],
                    "type": "string"
                  },
                  "product_type": {
                    "description": "The type of product to purchase (if `product_code` is not used).",
                    "enum": [
                      "datacenter",
                      "isp",
                      "residential"
                    ],
                    "type": "string"
                  },
                  "promotional_code": {
                    "description": "A promotional code to apply a discount to the checkout.",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "The quantity of the product to purchase.",
                    "type": "integer"
                  },
                  "service_fulfillment_filter": {
                    "description": "An optional filter object for advanced product/service configurations.",
                    "properties": {},
                    "type": "object"
                  }
                },
                "required": [
                  "quantity"
                ],
                "type": "object"
              }
            }
          },
          "description": "The data needed to create the checkout.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "created": {
                          "description": "A list of service IDs created during checkout (usually contains only one).",
                          "example": [
                            "API-1234-5678"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "invoice_is_paid": {
                          "description": "Indicates whether the invoice is already paid.",
                          "example": true,
                          "type": "boolean"
                        },
                        "invoice_url": {
                          "description": "URL where the user should be redirected to complete payment (null if paid in full).",
                          "example": "https://invoice.stripe.com/i/acct_1H7dAB2BUlqim5l/test_123",
                          "type": "string"
                        },
                        "proxies": {
                          "description": "A list of proxy objects tied to the newly created service.",
                          "items": {
                            "properties": {
                              "asn_id": {
                                "example": 7018,
                                "type": "integer"
                              },
                              "asn_name": {
                                "example": "AT&T Enterprises, LLC",
                                "type": "string"
                              },
                              "city_example_postcode": {
                                "example": "75202",
                                "type": "string"
                              },
                              "city_id": {
                                "example": 75202,
                                "type": "integer"
                              },
                              "city_latitude": {
                                "example": 32.7767,
                                "format": "float",
                                "type": "number"
                              },
                              "city_longitude": {
                                "example": -96.797,
                                "format": "float",
                                "type": "number"
                              },
                              "city_name": {
                                "example": "Dallas",
                                "type": "string"
                              },
                              "city_timezone": {
                                "example": "America/Chicago",
                                "type": "string"
                              },
                              "country_id": {
                                "example": "us",
                                "type": "string"
                              },
                              "country_name": {
                                "example": "United States",
                                "type": "string"
                              },
                              "customer_id": {
                                "example": 1976,
                                "type": "integer"
                              },
                              "default_proxy_user_password": {
                                "example": "apple1984",
                                "type": "string"
                              },
                              "default_proxy_user_username": {
                                "example": "stevejobs",
                                "type": "string"
                              },
                              "ip_address_id_v4": {
                                "example": "107.225.73.142",
                                "type": "string"
                              },
                              "ip_address_id_v6": {
                                "description": "IPv6 address if dual protocol is used",
                                "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
                                "type": "string"
                              },
                              "proxy_http_port": {
                                "example": 8080,
                                "type": "integer"
                              },
                              "proxy_id": {
                                "example": "7a018d34-76c2-4c23-b14d-f7b9a7054e25",
                                "type": "string"
                              },
                              "proxy_ip_address": {
                                "example": "107.225.73.142",
                                "type": "string"
                              },
                              "proxy_ip_address_v6": {
                                "description": "IPv6 address if dual protocol is used",
                                "example": "2600:1000:b12a:6351:8523:997e:93c4:f124",
                                "type": "string"
                              },
                              "proxy_last_update_datetime": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "proxy_password": {
                                "example": "DHf3PSQXQ7rw1v9",
                                "type": "string"
                              },
                              "proxy_protocol": {
                                "example": "ipv4",
                                "type": "string"
                              },
                              "proxy_socks5_port": {
                                "example": 1080,
                                "type": "integer"
                              },
                              "proxy_status": {
                                "example": "in_use",
                                "type": "string"
                              },
                              "proxy_type": {
                                "example": "isp",
                                "type": "string"
                              },
                              "proxy_username": {
                                "example": "att7018user",
                                "type": "string"
                              },
                              "service_id": {
                                "example": "API-1234-5678",
                                "type": "string"
                              },
                              "subdivision_id": {
                                "example": "us-tx",
                                "type": "string"
                              },
                              "subdivision_name": {
                                "example": "Texas",
                                "type": "string"
                              },
                              "subnet_id": {
                                "example": "107.225.72.0/22",
                                "type": "string"
                              },
                              "subnet_id_v6": {
                                "description": "IPv6 subnet if dual protocol is used",
                                "example": "2600:1000::/28",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "proxy_edited": {
                          "description": "A list of proxies edited or updated in the process (may be empty).",
                          "example": [
                            "7a018d34-76c2-4c23-b14d-f7b9a7054e25"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "residential_ledger_created": {
                          "description": "A list of residential ledger entries created (may be empty).",
                          "example": [],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "service": {
                          "description": "Detailed information about the provisioned service (null if not yet provisioned).",
                          "properties": {
                            "country_id": {
                              "example": "us",
                              "type": "string"
                            },
                            "customer_id": {
                              "example": 1976,
                              "type": "integer"
                            },
                            "open_invoice_id": {
                              "example": "null",
                              "type": "string"
                            },
                            "payment_method_id": {
                              "example": "null",
                              "type": "string"
                            },
                            "product_id": {
                              "example": "prod_ATT7018",
                              "type": "string"
                            },
                            "service_creation_datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "service_cycle": {
                              "example": "1:month",
                              "type": "string"
                            },
                            "service_dispatch_datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "service_earliest_cancellation_datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "service_expiry_datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "service_fulfillment_filter": {
                              "example": {
                                "asn_id": 7018
                              },
                              "properties": {},
                              "type": "object"
                            },
                            "service_id": {
                              "example": "API-1234-5678",
                              "type": "string"
                            },
                            "service_image": {
                              "example": "https://files.stripe.com/links/MDB8YWNjdF8xSDdkOEFCMkJVbHFpbTVsfGZsX2xpdmVfZFZ6TTZjUG01Q0NuR1IzSTZsVzNjVVFX00kUPPfQE9",
                              "type": "string"
                            },
                            "service_is_automatic_collection": {
                              "example": true,
                              "type": "boolean"
                            },
                            "service_is_cancellable": {
                              "example": true,
                              "type": "boolean"
                            },
                            "service_is_off_catalog": {
                              "example": false,
                              "type": "boolean"
                            },
                            "service_is_pending_cancellation": {
                              "example": false,
                              "type": "boolean"
                            },
                            "service_is_reconfigurable": {
                              "example": true,
                              "type": "boolean"
                            },
                            "service_last_update_datetime": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "service_metadata": {
                              "example": {},
                              "properties": {},
                              "type": "object"
                            },
                            "service_name": {
                              "example": "AT&T ISP Proxies [US]",
                              "type": "string"
                            },
                            "service_price_id": {
                              "example": "price_1QJx2DB2BUlqim5lxmO3aT2v",
                              "type": "string"
                            },
                            "service_promotional_code": {
                              "example": "HALFOFF",
                              "type": "string"
                            },
                            "service_protocol": {
                              "example": "ipv4",
                              "type": "string"
                            },
                            "service_quantity": {
                              "example": 5,
                              "type": "integer"
                            },
                            "service_status": {
                              "example": "active",
                              "type": "string"
                            },
                            "service_subscription_id": {
                              "example": "sub_1QxSHmB2BUlqim5lTUH8HvKa",
                              "type": "string"
                            },
                            "service_subscription_is_paused": {
                              "example": false,
                              "type": "boolean"
                            },
                            "service_total": {
                              "example": 450,
                              "type": "integer"
                            },
                            "service_type": {
                              "example": "isp",
                              "type": "string"
                            },
                            "subscription_schedule_id": {
                              "example": "null",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "service_id": {
                          "description": "The ID of the newly created service.",
                          "example": "API-1234-5678",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Successfully created checkout and paid with credit. Your service will be provisioned shortly.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully created a checkout. Depending on the remaining invoice amount, it may already be paid by credit, or you may need to complete payment at the returned invoice URL."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Create Checkout",
        "tags": [
          "Checkout"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/checkout/quote": {
      "post": {
        "description": "This endpoint allows a user to generate a quote for a service via the API. You can either specify\na `product_code` directly or use the traditional combination of `product_type`, `country_id`, and\n`product_protocol`.\n",
        "parameters": [
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "country_id": {
                    "description": "The ISO country code of the product. Applicable for region-specific datacenter/isp products.",
                    "example": "gb",
                    "type": "string"
                  },
                  "cycle_interval": {
                    "default": "month",
                    "description": "The interval of the product.",
                    "enum": [
                      "year",
                      "month",
                      "week",
                      "day"
                    ],
                    "example": "month",
                    "type": "string"
                  },
                  "cycle_interval_count": {
                    "description": "The interval count of the product.",
                    "example": 1,
                    "type": "integer"
                  },
                  "product_code": {
                    "description": "If provided, this overrides product_type, country_id, and product_protocol.\nThe cycle must still be valid for this product_code.\n",
                    "example": "isp_gb",
                    "type": "string"
                  },
                  "product_protocol": {
                    "default": "ipv4",
                    "description": "The protocol of the product.",
                    "enum": [
                      "ipv4",
                      "ipv6",
                      "dual"
                    ],
                    "example": "ipv4",
                    "type": "string"
                  },
                  "product_type": {
                    "description": "The product type you would like to purchase.",
                    "enum": [
                      "datacenter",
                      "isp",
                      "residential"
                    ],
                    "example": "isp",
                    "type": "string"
                  },
                  "promotional_code": {
                    "description": "Promotional code to apply to the checkout.",
                    "example": "NEWYEAR2025",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "The quantity of the product you would like to purchase.",
                    "example": 1,
                    "type": "integer"
                  },
                  "service_fulfillment_filter": {
                    "example": {
                      "asn_id": 7018
                    },
                    "properties": {},
                    "type": "object"
                  }
                },
                "required": [
                  "quantity"
                ],
                "type": "object"
              }
            }
          },
          "description": "The data needed to create the checkout quote.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "before_discount_total": {
                          "description": "Total cost before any discounts.",
                          "example": 350,
                          "type": "integer"
                        },
                        "credit_balance": {
                          "description": "User's current credit balance.",
                          "example": 99050,
                          "type": "integer"
                        },
                        "credit_only_checkout": {
                          "description": "Indicates if the checkout is credit only.",
                          "example": true,
                          "type": "boolean"
                        },
                        "customer_credit_balance_applied": {
                          "description": "Indicates if the user's credit balance was used.",
                          "example": true,
                          "type": "boolean"
                        },
                        "customer_credit_balance_applied_amount": {
                          "description": "Amount of credit balance applied.",
                          "example": 350,
                          "type": "integer"
                        },
                        "discount": {
                          "description": "Discount amount applied.",
                          "example": 0,
                          "type": "integer"
                        },
                        "discounted": {
                          "description": "Indicates if a discount was applied.",
                          "example": false,
                          "type": "boolean"
                        },
                        "invalid_reason": {
                          "description": "Reason for the cart being invalid (only set if is_valid=false).",
                          "example": "null",
                          "type": "string"
                        },
                        "is_top_up": {
                          "description": "Indicates if the cart is for a top-up.",
                          "example": false,
                          "type": "boolean"
                        },
                        "is_valid": {
                          "description": "Indicates if the cart is valid to checkout.",
                          "example": true,
                          "type": "boolean"
                        },
                        "line_items": {
                          "description": "Detailed list of cart items.",
                          "items": {
                            "properties": {
                              "item_country_id": {
                                "example": "gb",
                                "type": "string"
                              },
                              "item_name": {
                                "example": "Static Residential ISP Proxies [GB]",
                                "type": "string"
                              },
                              "item_per_unit_amount": {
                                "example": 350,
                                "type": "integer"
                              },
                              "item_price_id": {
                                "example": "price_1QJx2DB2BUlqim5lxmO3aT2v",
                                "type": "string"
                              },
                              "item_price_type": {
                                "example": "recurring",
                                "type": "string"
                              },
                              "item_quantity": {
                                "example": 1,
                                "type": "integer"
                              },
                              "item_total": {
                                "example": 350,
                                "type": "integer"
                              },
                              "item_type": {
                                "example": "isp",
                                "type": "string"
                              },
                              "service_fulfillment_filter": {
                                "description": "Additional filters for fulfillment (if any).",
                                "example": {},
                                "properties": {},
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "promotional_code": {
                          "example": "null",
                          "type": "string"
                        },
                        "promotional_code_id": {
                          "example": "null",
                          "type": "string"
                        },
                        "top_up_amount": {
                          "description": "Amount intended for credit top-up (if applicable).",
                          "example": 0,
                          "type": "integer"
                        },
                        "total": {
                          "description": "Total cost after discounts, before credit.",
                          "example": 350,
                          "type": "integer"
                        },
                        "total_after_applied_credit": {
                          "description": "Total cost after discounts and credit.",
                          "example": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Quote generated successfully.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Quote generated successfully."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Generate Checkout Quote",
        "tags": [
          "Checkout"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/city/retrieve/{city_id}": {
      "get": {
        "description": "Retrieves a specific City.\n",
        "parameters": [
          {
            "description": "ID of the City to retrieve",
            "in": "path",
            "name": "city_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CitySuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful City Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve City",
        "tags": [
          "City"
        ]
      }
    },
    "/public/user/city/search": {
      "get": {
        "description": "Search City entries using various filters.\n",
        "parameters": [
          {
            "description": "ID of the City",
            "in": "query",
            "name": "city_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the City",
            "in": "query",
            "name": "city_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the Subdivision which the City is in",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timezone of the City",
            "in": "query",
            "name": "city_timezone",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the City one of the ten largest cities in its timezone with atleast 300,000 population",
            "in": "query",
            "name": "city_is_populous",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indentifier of the city when used in backconnect proxy",
            "in": "query",
            "name": "city_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Example postcode of the City",
            "in": "query",
            "name": "city_example_postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latitude of the City",
            "in": "query",
            "name": "city_latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Longitude of the City",
            "in": "query",
            "name": "city_longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current number of online nodes in the City",
            "in": "query",
            "name": "city_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CitySuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful City search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search City",
        "tags": [
          "City"
        ]
      }
    },
    "/public/user/continent/retrieve/{continent_id}": {
      "get": {
        "description": "Retrieves a specific Continent.\n",
        "parameters": [
          {
            "description": "ID of the Continent to retrieve",
            "in": "path",
            "name": "continent_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ContinentSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Continent Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Continent",
        "tags": [
          "Continent"
        ]
      }
    },
    "/public/user/continent/search": {
      "get": {
        "description": "Search Continent entries using various filters.\n",
        "parameters": [
          {
            "description": "Unique two-letter identifier of the Continent",
            "in": "query",
            "name": "continent_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Continent",
            "in": "query",
            "name": "continent_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alias or alternative name for the Continent",
            "in": "query",
            "name": "continent_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ContinentSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Continent search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Continent",
        "tags": [
          "Continent"
        ]
      }
    },
    "/public/user/country/retrieve/{country_id}": {
      "get": {
        "description": "Retrieves a specific Country.\n",
        "parameters": [
          {
            "description": "ID of the Country to retrieve",
            "in": "path",
            "name": "country_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CountrySuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Country Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Country",
        "tags": [
          "Country"
        ]
      }
    },
    "/public/user/country/search": {
      "get": {
        "description": "Search Country entries using various filters.\n",
        "parameters": [
          {
            "description": "Unique two-letter identifier of the Country",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Country",
            "in": "query",
            "name": "country_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Identifier of the Continent where the Country is located",
            "in": "query",
            "name": "continent_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag indicating if the Country is a member of the European Union",
            "in": "query",
            "name": "country_is_european_union",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Alias or alternative name for the Country",
            "in": "query",
            "name": "country_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The current number of online nodes in the Country",
            "in": "query",
            "name": "country_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CountrySuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Country search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Country",
        "tags": [
          "Country"
        ]
      }
    },
    "/public/user/customer/retrieve": {
      "get": {
        "description": "Retrieves the profile of the currently authenticated customer, along with their credit balance.\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CustomerSuccessfulRetrieveResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "credit_balance": {
                              "example": 10000,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "active_residential_service_id": {
                              "example": "130-8201-332",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "residential_bytes_left": {
                              "example": 313344,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "proxy_count": {
                              "example": 100,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "free_trial_is_pending": {
                              "example": false,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "kyc_is_pending": {
                              "example": false,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Customer Profile Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Current Customer",
        "tags": [
          "Customer"
        ]
      }
    },
    "/public/user/ip_address/geolocate/{ip_address}": {
      "get": {
        "description": "Retrieves geolocation information for a given IP address and maps it to internal API objects including country, subdivision and ASN. The response includes both external data provided by an external geolocation provider and internal data derived from internal databases.\n",
        "parameters": [
          {
            "description": "IP address for which geolocation information is required",
            "in": "path",
            "name": "ip_address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "external": {
                        "asn_id": "13335",
                        "city_name": "South Brisbane",
                        "continent_id": "oc",
                        "continent_name": "Oceania",
                        "country_id": "au",
                        "country_name": "Australia",
                        "latitude": -27.4766,
                        "longitude": 153.0166,
                        "timezone": "australia/brisbane",
                        "zip_code": "4101"
                      },
                      "internal": {
                        "asn": {
                          "asn_id": 13335,
                          "asn_ip_address_count": 1691904,
                          "asn_name": "Cloudflare Inc",
                          "asn_rir": "arin",
                          "asn_type": "hosting",
                          "country_id": "us"
                        },
                        "city": {
                          "city_alias": "brisbane",
                          "city_creation_datetime": "2024-11-11 12:56:15",
                          "city_example_postcode": "4000",
                          "city_id": 378778,
                          "city_is_populous": true,
                          "city_last_update_datetime": "2024-11-11 12:56:15",
                          "city_latitude": -27.46794,
                          "city_longitude": 153.02809,
                          "city_name": "Brisbane",
                          "city_population": 2582007,
                          "city_timezone": "australia/brisbane",
                          "subdivision_id": "au-qld"
                        },
                        "continent": {
                          "continent_alias": "oc",
                          "continent_id": "oc",
                          "continent_name": "Oceania"
                        },
                        "country": {
                          "continent_id": "oc",
                          "country_alias": "au",
                          "country_id": "au",
                          "country_is_european_union": false,
                          "country_name": "Australia"
                        },
                        "ip_address": "1.1.1.1",
                        "subdivision": {
                          "country_id": "au",
                          "subdivision_alias": "au_qld",
                          "subdivision_id": "au-qld",
                          "subdivision_name": "Queensland"
                        }
                      }
                    },
                    "message": "IP Address geolocation succesfully retrieved."
                  },
                  "properties": {
                    "data": {
                      "properties": {
                        "external": {
                          "description": "External geolocation data from external geolocation provider.",
                          "properties": {
                            "asn_id": {
                              "type": "string"
                            },
                            "city_name": {
                              "type": "string"
                            },
                            "continent_id": {
                              "type": "string"
                            },
                            "continent_name": {
                              "type": "string"
                            },
                            "country_id": {
                              "type": "string"
                            },
                            "country_name": {
                              "type": "string"
                            },
                            "latitude": {
                              "type": "number"
                            },
                            "longitude": {
                              "type": "number"
                            },
                            "timezone": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "internal": {
                          "description": "Internal geolocation data derived from internal databases.",
                          "properties": {
                            "asn": {
                              "properties": {},
                              "type": "object"
                            },
                            "city": {
                              "properties": {},
                              "type": "object"
                            },
                            "continent": {
                              "properties": {},
                              "type": "object"
                            },
                            "country": {
                              "properties": {},
                              "type": "object"
                            },
                            "ip_address": {
                              "type": "string"
                            },
                            "subdivision": {
                              "properties": {},
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "IP Address geolocation successfully retrieved.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "IP Address geolocation successfully retrieved."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve IP Address Geolocation",
        "tags": [
          "IP Address"
        ]
      }
    },
    "/public/user/log/retrieve/{log_id}": {
      "get": {
        "description": "Retrieves a specific Log based on the provided ID for the current user's account.\n",
        "parameters": [
          {
            "description": "ID of the Log to retrieve",
            "in": "path",
            "name": "log_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LogSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Log Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Log",
        "tags": [
          "Log"
        ]
      }
    },
    "/public/user/log/search": {
      "get": {
        "description": "Search log entries on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the Log",
            "in": "query",
            "name": "log_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Network type of the Log",
            "in": "query",
            "name": "log_network",
            "schema": {
              "enum": [
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the associated Proxy User",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the associated Service",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Protocol used in the Log",
            "in": "query",
            "name": "log_protocol",
            "schema": {
              "enum": [
                "http",
                "socks5"
              ],
              "type": "string"
            }
          },
          {
            "description": "ISO country code of the Log",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "City of the Log",
            "in": "query",
            "name": "city_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Autonomous System Number (ASN) of the Log",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Session ID of the Log",
            "in": "query",
            "name": "log_session_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Client IP address of the Log",
            "in": "query",
            "name": "log_client_ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Ingress IP address of the Log",
            "in": "query",
            "name": "log_ingress_ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Egress IP address of the Log",
            "in": "query",
            "name": "log_egress_ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Ingress port of the Log",
            "in": "query",
            "name": "log_ingress_port",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Domain associated with the Log",
            "in": "query",
            "name": "log_hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status code of the request",
            "in": "query",
            "name": "log_status_code",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Size in bytes of the Log",
            "in": "query",
            "name": "log_total_bytes",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Datetime when the request was made",
            "in": "query",
            "name": "log_request_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Total elapsed time of request in ms",
            "in": "query",
            "name": "log_total_elapsed_ms",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LogSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Log search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Logs",
        "tags": [
          "Log"
        ]
      }
    },
    "/public/user/log_summary/retrieve/{log_summary_id}": {
      "get": {
        "description": "Retrieves a specific Log Summary based on the provided ID for the current user's account.\n",
        "parameters": [
          {
            "description": "ID of the Log Summary to retrieve",
            "in": "path",
            "name": "log_summary_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LogSummarySuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Log Summary Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Log Summary",
        "tags": [
          "Log Summary"
        ]
      }
    },
    "/public/user/log_summary/search": {
      "get": {
        "description": "Search log summary entries on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the Log Summary",
            "in": "query",
            "name": "log_summary_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the associated Proxy User",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Network type of the Log Summary",
            "in": "query",
            "name": "log_summary_network",
            "schema": {
              "enum": [
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Domain associated with the Log Summary",
            "in": "query",
            "name": "log_summary_hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of requests in the Log Summary",
            "in": "query",
            "name": "log_summary_requests",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of successful requests in the Log Summary",
            "in": "query",
            "name": "log_summary_successful",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of error requests in the Log Summary",
            "in": "query",
            "name": "log_summary_error",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Total bytes in the Log Summary",
            "in": "query",
            "name": "log_summary_bytes",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Period of the Log Summary",
            "in": "query",
            "name": "log_summary_period",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Creation datetime of the Log Summary",
            "in": "query",
            "name": "log_summary_creation_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Last update datetime of the Log Summary",
            "in": "query",
            "name": "log_summary_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LogSummarySuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Log Summary search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Log Summary",
        "tags": [
          "Log Summary"
        ]
      }
    },
    "/public/user/product/search": {
      "get": {
        "description": "Search Products entries using various filters.\n",
        "parameters": [
          {
            "description": "Unique identifier of the Product",
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type associated with the Product",
            "in": "query",
            "name": "product_type",
            "schema": {
              "enum": [
                "credit",
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Protocol associated with the Product",
            "in": "query",
            "name": "product_protocol",
            "schema": {
              "enum": [
                "ipv4",
                "ipv6",
                "dual"
              ],
              "type": "string"
            }
          },
          {
            "description": "Country ID for the region of the product",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the Product is active",
            "in": "query",
            "name": "product_is_active",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Product is one per customer",
            "in": "query",
            "name": "product_is_one_per_customer",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Product is one active per customer",
            "in": "query",
            "name": "product_is_one_active_per_customer",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Product is one per IP",
            "in": "query",
            "name": "product_is_per_ip",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "country_id": {
                            "example": "fr",
                            "type": "string"
                          },
                          "product_creation_datetime": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "product_description": {
                            "example": "null",
                            "type": "string"
                          },
                          "product_id": {
                            "example": "prod_RCLjwcUyqkfd2f",
                            "type": "string"
                          },
                          "product_image": {
                            "example": "https://files.stripe.com/links/MDB8YWNjdF8xSDdkOEFCMkJVbHFpbTVsfGZsX2xpdmVfNU9KWUZCTnp4djA0dmpuV3F0bjM2ck9i00dSLST0rl",
                            "type": "string"
                          },
                          "product_instock": {
                            "example": false,
                            "type": "boolean"
                          },
                          "product_is_active": {
                            "example": true,
                            "type": "boolean"
                          },
                          "product_is_available": {
                            "example": false,
                            "type": "boolean"
                          },
                          "product_is_per_ip": {
                            "example": true,
                            "type": "boolean"
                          },
                          "product_is_visible": {
                            "example": true,
                            "type": "boolean"
                          },
                          "product_last_update_datetime": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "product_name": {
                            "example": "Static Residential ISP Proxies [FR]",
                            "type": "string"
                          },
                          "product_prices": {
                            "items": {
                              "properties": {
                                "price_amount": {
                                  "type": "integer"
                                },
                                "price_cycle_interval": {
                                  "example": "month",
                                  "type": "string"
                                },
                                "price_cycle_interval_count": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "price_id": {
                                  "example": "price_1QJx2EB2BUlqim5ltggZJfyY",
                                  "type": "string"
                                },
                                "price_is_subscription": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "price_package_quantity": {
                                  "type": "integer"
                                },
                                "price_per_unit_amount": {
                                  "type": "integer"
                                },
                                "price_tier_type": {
                                  "example": "volume",
                                  "type": "string"
                                },
                                "price_tiers": {
                                  "items": {
                                    "properties": {
                                      "price_tier_amount": {
                                        "example": 350,
                                        "type": "integer"
                                      },
                                      "price_tier_up_to": {
                                        "example": 1,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "price_type": {
                                  "example": "recurring",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "product_stock": {
                            "example": 0,
                            "type": "integer"
                          },
                          "product_type": {
                            "example": "isp",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "item_count": {
                      "example": 1,
                      "type": "integer"
                    },
                    "message": {
                      "example": "Product search with stock succesfully completed.",
                      "type": "string"
                    },
                    "page": {
                      "example": 1,
                      "type": "integer"
                    },
                    "per_page": {
                      "example": 100,
                      "type": "integer"
                    },
                    "total_count": {
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product search with stock successfully retrieved."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Product",
        "tags": [
          "Product"
        ]
      }
    },
    "/public/user/proxy/edit/{proxy_id}": {
      "patch": {
        "description": "This endpoint is for editing an existing proxy in the system using the provided `proxy_id`. It allows updating Proxy Specific Authentication username or password.\n",
        "parameters": [
          {
            "description": "The unique identifier of the proxy to be edited.",
            "in": "path",
            "name": "proxy_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "proxy_password": {
                    "description": "Proxy Specific Authentication password of the proxy.",
                    "type": "string"
                  },
                  "proxy_username": {
                    "description": "Proxy Specific Authentication username of the proxy.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "The proxy edit details.",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "edited": {
                      "description": "List of Proxy IDs that were successfully edited.",
                      "example": [
                        "d4f72cb1-28f8-4040-9248-89c91976c3c1"
                      ],
                      "items": {
                        "description": "The Proxy ID.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message indicating the Proxy was edited.",
                      "example": "Proxy successfully edited.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Proxy Successfully Edited"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Proxy Edit",
        "tags": [
          "Proxy"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/proxy/list_by_id": {
      "post": {
        "description": "This endpoint retrieves a list of proxies assigned to the current user (or a specified\ncustomer) based on the proxy IDs.\n\nThis endpoint is intentionally a POST even though it only retrieves data since it needs to larger lists of UUIDs.\n",
        "parameters": [
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "list_authentication": {
                    "default": "username_and_password",
                    "description": "Authentication type for the proxies in the returned list.",
                    "enum": [
                      "username_and_password",
                      "ip_address",
                      "proxy_specific"
                    ],
                    "example": "username_and_password",
                    "type": "string"
                  },
                  "list_format": {
                    "default": "standard",
                    "description": "Desired format for displaying the proxies in the returned list.",
                    "enum": [
                      "standard",
                      "http",
                      "socks5",
                      "socks5h"
                    ],
                    "example": "standard",
                    "type": "string"
                  },
                  "list_protocol": {
                    "default": "http",
                    "description": "Desired protocol for the proxies in the returned list.",
                    "enum": [
                      "http",
                      "socks5"
                    ],
                    "example": "http",
                    "type": "string"
                  },
                  "list_version": {
                    "default": "ipv4",
                    "description": "IP version preference.",
                    "enum": [
                      "ipv4",
                      "ipv6"
                    ],
                    "example": "ipv4",
                    "type": "string"
                  },
                  "proxy_ids": {
                    "description": "List of proxy UUIDs to retrieve.",
                    "example": [
                      "19efadd4-5814-4986-90be-4460e7d05c29",
                      "1847e66a-a56e-4bc9-94e2-88a8cf3d0ad3"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "proxy_user_id": {
                    "description": "ID of the proxy_user used for authentication with the proxies.",
                    "example": "some_proxy_user_id",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "The resulting list of proxies in the requested format.",
                      "example": [
                        "socks5://user:password@17.253.94.0:8080"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Proxy list successfully generated.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully generated proxy list."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Generate Proxy List By ID",
        "tags": [
          "Proxy"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/proxy/list_by_search": {
      "get": {
        "description": "This endpoint retrieves a list of available proxies for a user based on provided search parameters.\nThe search parameters allow the user to filter the proxies based on protocol, version, format, and associated service ID.\nThe function returns proxies in various formats suitable for different purposes.\n",
        "parameters": [
          {
            "description": "Desired protocol for the proxies you want returned in the search list.",
            "in": "query",
            "name": "list_protocol",
            "schema": {
              "default": "http",
              "enum": [
                "http",
                "socks5"
              ],
              "type": "string"
            }
          },
          {
            "description": "IP version preference.",
            "in": "query",
            "name": "list_version",
            "schema": {
              "default": "ipv4",
              "enum": [
                "ipv4",
                "ipv6"
              ],
              "type": "string"
            }
          },
          {
            "description": "Desired format for displaying the proxies you want returned in the search.",
            "in": "query",
            "name": "list_format",
            "schema": {
              "default": "standard",
              "enum": [
                "standard",
                "http",
                "socks5",
                "socks5h"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the proxy_user you want to use to authenticate with the proxies",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authentication ID for the proxies you want returned in the search.",
            "in": "query",
            "name": "list_authentication",
            "schema": {
              "default": "username_and_password",
              "enum": [
                "username_and_password",
                "ip_address",
                "proxy_specific"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the proxy",
            "in": "query",
            "name": "proxy_id",
            "schema": {
              "format": "string",
              "type": "integer"
            }
          },
          {
            "description": "Service ID associated with the proxy",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main IP Address of the proxy",
            "in": "query",
            "name": "proxy_ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main subnet of the proxy",
            "in": "query",
            "name": "subnet_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main subnet of the proxy",
            "in": "query",
            "name": "subnet_id_v6",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IPv4 address ID of the proxy",
            "in": "query",
            "name": "ip_address_id_v4",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IPv6 address ID of the proxy",
            "in": "query",
            "name": "ip_address_id_v6",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Formatted http proxy string",
            "in": "query",
            "name": "http_formatted",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "http port of the proxy",
            "in": "query",
            "name": "proxy_http_port",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "socks5 port of the proxy",
            "in": "query",
            "name": "proxy_socks5_port",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current status of the proxy",
            "in": "query",
            "name": "proxy_status",
            "schema": {
              "enum": [
                "available",
                "in_use",
                "reserved",
                "waiting",
                "pending_deletion"
              ],
              "type": "string"
            }
          },
          {
            "description": "Type of the proxies you want returned in the search",
            "in": "query",
            "name": "proxy_type",
            "schema": {
              "enum": [
                "isp",
                "datacenter",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Version of the proxies you want returned in the search",
            "in": "query",
            "name": "proxy_protocol",
            "schema": {
              "enum": [
                "ipv4",
                "ipv6",
                "dual"
              ],
              "type": "string"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-1 alpha-2)](https://www.iban.com/country-codes)",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the country the proxy is located in",
            "in": "query",
            "name": "country_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-2)](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory)",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the subdivision the proxy is located in",
            "in": "query",
            "name": "subdivision_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the city the proxy is located in",
            "in": "query",
            "name": "city_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Name of the city the proxy is located in",
            "in": "query",
            "name": "city_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timezone of the City the proxy is located in",
            "in": "query",
            "name": "city_timezone",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Example postcode of the City the proxy is located in",
            "in": "query",
            "name": "city_example_postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latitude of the City the proxy is located in",
            "in": "query",
            "name": "city_latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Longitude of the City the proxy is located in",
            "in": "query",
            "name": "city_longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the ASN of the proxy",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name associated with the ASN of the proxy",
            "in": "query",
            "name": "asn_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Datetime the proxy was last updated",
            "in": "query",
            "name": "proxy_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "List of proxies.",
                      "example": [
                        "socks5://user:password@17.253.94.0:8080"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Proxy list successfully generated.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully generated proxy list."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Generate Proxy List By Search",
        "tags": [
          "Proxy"
        ]
      }
    },
    "/public/user/proxy/retrieve/{proxy_id}": {
      "get": {
        "description": "Retrieves a specific Proxy based on the provided ID for the current user's account, ensuring\nthat only proxies associated with the customer services and in use are returned.\n",
        "parameters": [
          {
            "description": "ID of the Proxy to retrieve",
            "in": "path",
            "name": "proxy_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProxySuccessfulRetrieveResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "http_formatted": {
                              "example": "15.32.0.111:6000:yzrxnxD9:6Gh9Hm1Q",
                              "type": "string"
                            },
                            "socks5_formatted": {
                              "example": "15.32.0.111:6000:yzrxnxD9:6Gh9Hm1Q",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Proxy Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Proxy",
        "tags": [
          "Proxy"
        ]
      }
    },
    "/public/user/proxy/search": {
      "get": {
        "description": "Search Proxies on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the proxy",
            "in": "query",
            "name": "proxy_id",
            "schema": {
              "format": "string",
              "type": "integer"
            }
          },
          {
            "description": "Service ID associated with the proxy",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main IP Address of the proxy",
            "in": "query",
            "name": "proxy_ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main subnet of the proxy",
            "in": "query",
            "name": "subnet_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Main subnet of the proxy",
            "in": "query",
            "name": "subnet_id_v6",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IPv4 address ID of the proxy",
            "in": "query",
            "name": "ip_address_id_v4",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IPv6 address ID of the proxy",
            "in": "query",
            "name": "ip_address_id_v6",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "http port of the proxy",
            "in": "query",
            "name": "proxy_http_port",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "socks5 port of the proxy",
            "in": "query",
            "name": "proxy_socks5_port",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Current status of the proxy",
            "in": "query",
            "name": "proxy_status",
            "schema": {
              "enum": [
                "available",
                "in_use",
                "reserved",
                "waiting",
                "pending_deletion"
              ],
              "type": "string"
            }
          },
          {
            "description": "Type of the proxies you want returned in the search",
            "in": "query",
            "name": "proxy_type",
            "schema": {
              "enum": [
                "isp",
                "datacenter",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Version of the proxies you want returned in the search",
            "in": "query",
            "name": "proxy_protocol",
            "schema": {
              "enum": [
                "ipv4",
                "ipv6",
                "dual"
              ],
              "type": "string"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-1 alpha-2)](https://www.iban.com/country-codes)",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the country the proxy is located in",
            "in": "query",
            "name": "country_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-2)](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory)",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the subdivision the proxy is located in",
            "in": "query",
            "name": "subdivision_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the city the proxy is located in",
            "in": "query",
            "name": "city_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Name of the city the proxy is located in",
            "in": "query",
            "name": "city_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timezone of the City the proxy is located in",
            "in": "query",
            "name": "city_timezone",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Example postcode of the City the proxy is located in",
            "in": "query",
            "name": "city_example_postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Latitude of the City the proxy is located in",
            "in": "query",
            "name": "city_latitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Longitude of the City the proxy is located in",
            "in": "query",
            "name": "city_longitude",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier of the ASN of the proxy",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name associated with the ASN of the proxy",
            "in": "query",
            "name": "asn_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Datetime the proxy was last updated",
            "in": "query",
            "name": "proxy_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProxySuccessfulSearchResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "http_formatted": {
                                "example": "15.32.0.111:6000:yzrxnxD9:6Gh9Hm1Q",
                                "type": "string"
                              },
                              "socks5_formatted": {
                                "example": "15.32.0.111:6000:yzrxnxD9:6Gh9Hm1Q",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Proxy search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Proxies",
        "tags": [
          "Proxy"
        ]
      }
    },
    "/public/user/proxy_test_server/search": {
      "get": {
        "description": "Search Proxy Test Servers using various filters.\n",
        "parameters": [
          {
            "description": "ID of the Proxy Test Server",
            "in": "query",
            "name": "proxy_test_server_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "City ID of the Proxy Test Server",
            "in": "query",
            "name": "city_id",
            "schema": {}
          },
          {
            "description": "Country ID of the Proxy Test Server",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyTestServerSuccessfulSearchResponse"
                }
              }
            },
            "description": "Successful Proxy Test Server search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Proxy Test Servers",
        "tags": [
          "Proxy Test Server"
        ]
      }
    },
    "/public/user/proxy_user/create": {
      "post": {
        "description": "This endpoint allows you to create a new proxy user.\n\nThe `proxy_user_id` and `proxy_user_password` can be provided or, if omitted, will be randomly generated.\n\nAdditional considerations when creating a Proxy User:\n- `proxy_user_is_strict_security`: If true, the Proxy User requires an IP address authentication list.\n- `restricted_service_ids`: A list of service IDs that the user is restricted to, if service restriction is enabled.\n- `ip_address_authentications` must be a list of valid IP addresses. Each IP address can only be used by one Proxy User.\n- `proxy_user_residential_bytes_limit`: An integer limiting residential traffic (must not be negative).\n",
        "parameters": [
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ip_address_authentications": {
                    "description": "A list of IP addresses for Proxy User authentication. Each IP can only be used by one Proxy User.",
                    "example": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "proxy_user_id": {
                    "default": "Randomly generated",
                    "description": "The ID of the proxy user. If not provided, it will be randomly generated.",
                    "example": "stevejobs",
                    "maxLength": 32,
                    "minLength": 10,
                    "type": "string"
                  },
                  "proxy_user_is_service_restricted": {
                    "default": false,
                    "description": "Enable service restriction.",
                    "example": true,
                    "type": "boolean"
                  },
                  "proxy_user_is_strict_security": {
                    "default": false,
                    "description": "Enable strict security. If true, IP authentication is required.",
                    "example": true,
                    "type": "boolean"
                  },
                  "proxy_user_metadata": {
                    "description": "Arbitrary metadata object for the Proxy User.\nConstraints\n- Supports string, boolean, float and integer values.\n- Non-nested JSON object\n- Max 30 keys\n- Each value \u2264 300 chars\n- Total size \u2264 32KB\nDefaults to `{}` if not provided.\n",
                    "properties": {},
                    "type": "object"
                  },
                  "proxy_user_password": {
                    "default": "Randomly generated",
                    "description": "The password of the proxy user. If not provided, it will be randomly generated.",
                    "example": "apple1984",
                    "maxLength": 32,
                    "minLength": 10,
                    "type": "string"
                  },
                  "proxy_user_residential_bytes_limit": {
                    "description": "Residential bytes limit for the Proxy User (must not be negative).",
                    "example": 1000000,
                    "type": "integer"
                  },
                  "restricted_service_ids": {
                    "description": "A list of service IDs to which the user is restricted.",
                    "example": [
                      "124-1321-123",
                      "224-1321-123"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "The details of the proxy user to be created.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "created": [
                    "stevejobs"
                  ],
                  "data": {
                    "proxy_user_id": "stevejobs",
                    "proxy_user_password": "apple1984"
                  },
                  "message": "Proxy User successfully created."
                },
                "schema": {
                  "properties": {
                    "created": {
                      "items": {
                        "description": "A list containing the ID of the created Proxy User.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "data": {
                      "properties": {
                        "proxy_user_id": {
                          "description": "The Proxy User ID/username.",
                          "type": "string"
                        },
                        "proxy_user_password": {
                          "description": "The Proxy User password.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "description": "A message indicating success.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "created",
                    "data",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Proxy User Successfully Created"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Create Proxy User",
        "tags": [
          "Proxy User"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/proxy_user/delete/{proxy_user_id}": {
      "delete": {
        "description": "Allows a user to delete an existing proxy user associated with their account.\nProxy users that are set as account default can not be deleted,\nand already deleted proxy users can not be deleted again.\n",
        "parameters": [
          {
            "description": "ID of the proxy user record to delete.",
            "in": "path",
            "name": "proxy_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyUserSuccessfulDeleteResponse"
                }
              }
            },
            "description": "Proxy User Successfully Deleted"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Delete Proxy User Record",
        "tags": [
          "Proxy User"
        ]
      }
    },
    "/public/user/proxy_user/edit/{proxy_user_id}": {
      "patch": {
        "description": "This endpoint allows a user to edit an existing Proxy User entry by providing the necessary `proxy_user_id`.\n",
        "parameters": [
          {
            "description": "ID of the proxy user record to edit.",
            "in": "path",
            "name": "proxy_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ip_address_authentications": {
                    "description": "A list of valid IP addresses authenticated for this Proxy User.",
                    "example": [
                      "1.1.1.1",
                      "2.2.2.2"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "proxy_user_is_service_restricted": {
                    "description": "Whether the Proxy User is restricted to a set of services.",
                    "example": true,
                    "type": "boolean"
                  },
                  "proxy_user_is_strict_security": {
                    "description": "Enable or disable strict security for the Proxy User.",
                    "example": false,
                    "type": "boolean"
                  },
                  "proxy_user_metadata": {
                    "description": "Arbitrary metadata object associated with the Proxy User.\nConstraints\n- Supports string, boolean, float and integer values.\n- Must be a non-nested JSON object.\n- Maximum 30 keys.\n- Each value's string representation \u2264 300 characters.\n- Total size \u2264 32KB.\n",
                    "example": {
                      "internal_customer_id": "94266dc6-b29f-4499-a7a8-35232d186706"
                    },
                    "properties": {},
                    "type": "object"
                  },
                  "proxy_user_password": {
                    "description": "The new password for the Proxy User. Must be alphanumeric, 10 to 32 characters.",
                    "example": "newPass1241233",
                    "type": "string"
                  },
                  "proxy_user_residential_bytes_limit": {
                    "description": "The residential bytes limit for the Proxy User (must be \u2265 current usage).",
                    "example": 1000000,
                    "type": "integer"
                  },
                  "restricted_service_ids": {
                    "description": "A list of Service IDs to which the user is restricted (only if `proxy_user_is_service_restricted` is true).",
                    "example": [
                      "123-4324-123",
                      "123-4324-125"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "The Proxy User details to be edited.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "edited": {
                      "description": "List of Proxy User IDs that were successfully edited.",
                      "example": [
                        "stevejobs"
                      ],
                      "items": {
                        "description": "The Proxy User ID.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message indicating the Proxy User was edited.",
                      "example": "Proxy User successfully edited.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Proxy User Successfully Edited"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Edit Proxy User",
        "tags": [
          "Proxy User"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/proxy_user/retrieve/{proxy_user_id}": {
      "get": {
        "description": "Retrieves a specific Proxy User based on the provided ID for the current user's account.\n",
        "parameters": [
          {
            "description": "ID of the Proxy User to retrieve",
            "in": "path",
            "name": "proxy_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyUserSuccessfulRetrieveResponse"
                }
              }
            },
            "description": "Successful Proxy User Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Proxy User",
        "tags": [
          "Proxy User"
        ]
      }
    },
    "/public/user/proxy_user/search": {
      "get": {
        "description": "Search Proxy Users on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the Proxy User",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Password of the Proxy User",
            "in": "query",
            "name": "proxy_user_password",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IP Address authentication limit of the Proxy User (supports min_/max_)",
            "in": "query",
            "name": "proxy_user_ip_address_authentication_limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Whether the Proxy User is deleted (true/false)",
            "in": "query",
            "name": "proxy_user_is_deleted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Proxy User is service restricted (true/false)",
            "in": "query",
            "name": "proxy_user_is_service_restricted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Proxy User has strict security (true/false)",
            "in": "query",
            "name": "proxy_user_is_strict_security",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the Proxy User is default (true/false)",
            "in": "query",
            "name": "proxy_user_is_default",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Creation datetime of the Proxy User (supports min_/max_)",
            "in": "query",
            "name": "proxy_user_creation_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Last update datetime of the Proxy User (supports min_/max_)",
            "in": "query",
            "name": "proxy_user_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyUserSuccessfulSearchResponse"
                }
              }
            },
            "description": "Successful Proxy User search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Proxy Users",
        "tags": [
          "Proxy User"
        ]
      }
    },
    "/public/user/residential/list": {
      "get": {
        "description": "This endpoint creates a list of residential proxies based on filter parameters.\nThe search parameters allow the user to filter the proxies by location, session type, and format (e.g., http, socks5, socks5h).\n",
        "parameters": [
          {
            "description": "Number of proxies to return in the list.",
            "in": "query",
            "name": "list_count",
            "schema": {
              "default": 100,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Desired format for the proxies (e.g., \"http\", \"socks5\", \"socks5h\", or \"standard\").",
            "in": "query",
            "name": "list_format",
            "schema": {
              "default": "standard",
              "enum": [
                "standard",
                "http",
                "socks5",
                "socks5h"
              ],
              "type": "string"
            }
          },
          {
            "description": "ID of the proxy_user you want to use to authenticate with the proxies.",
            "in": "query",
            "name": "proxy_user_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Session type of the residential proxies you want returned in the search list.",
            "in": "query",
            "name": "list_session_type",
            "schema": {
              "default": "sticky",
              "enum": [
                "sticky",
                "rotating"
              ],
              "type": "string"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-1 alpha-2)](https://www.iban.com/country-codes) to generate residential proxies in.",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the City to generate residential proxies in.",
            "in": "query",
            "name": "city_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Alias of the City to generate residential proxies in.",
            "in": "query",
            "name": "city_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the Zip Code to generate residential proxies in.",
            "in": "query",
            "name": "zip_code_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "ID of the US Subdivision to generate the residential proxies in.",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Is SmartPath enabled for the residential proxies you want returned in the search list.",
            "in": "query",
            "name": "list_smartpath_enabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The session ttl of the residential proxies you want returned in the search list",
            "in": "query",
            "name": "list_session_ttl",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Desired mode for residential network optimization",
            "in": "query",
            "name": "list_mode",
            "schema": {
              "default": "general",
              "enum": [
                "general",
                "size",
                "speed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "List of residential proxies.",
                      "example": [
                        "socks5h://1_oGDQZ_c_gb_city_norwich_m_general_s_DDINPY7TQ0781XEO:vxqaFAA99F@residential.pingproxies.com:8000",
                        "socks5h://1_oGDQZ_c_gb_city_norwich_m_general_s_XIINPY7TQ0781XEA:vxqaFAA99F@residential.pingproxies.com:8000"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Residential list successfully generated.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Residential list successfully generated."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Generated Residential List",
        "tags": [
          "Residential"
        ]
      }
    },
    "/public/user/residential/summary": {
      "get": {
        "description": "This endpoint provides a detailed summary of a residential service.\nIt returns information such as service details, usage statistics, and associated proxy users.\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "proxy_user_ids": {
                          "items": {
                            "example": "stevejobs",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "residential_bytes": {
                          "example": 10024144,
                          "type": "integer"
                        },
                        "residential_bytes_left": {
                          "example": 7003114,
                          "type": "integer"
                        },
                        "residential_bytes_used": {
                          "example": 3021030,
                          "type": "integer"
                        },
                        "residential_requests": {
                          "example": 5012,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Residential summary successfully generated.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful retrieval of residential service summary."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Residential Service Summary",
        "tags": [
          "Residential"
        ]
      }
    },
    "/public/user/residential_availability/count": {
      "get": {
        "description": "Get the total count of residential availability nodes with optional filtering capabilities.\nFilters are applied when parameters are present and not null.\n",
        "parameters": [
          {
            "description": "Filter by 2-character country code",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by state/province identifier",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by city name",
            "in": "query",
            "name": "city_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by Autonomous System Number",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by postal/ZIP code",
            "in": "query",
            "name": "zip_code_alias",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "total_residential_availability_node_count": {
                          "description": "Total number of nodes available for given filter parameters",
                          "example": 1500,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Residential Availability count successful.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Residential availability count retrieval successful"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Get Residential Availability Count",
        "tags": [
          "Residential Availability"
        ]
      }
    },
    "/public/user/residential_availability/search": {
      "get": {
        "description": "Search residential avairecords with optional grouping capabilities.\nUse `group_by` parameter to aggregate results by specified field(s).\n",
        "parameters": [
          {
            "description": "Filter by 2-character country code",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by state/province identifier",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by city name",
            "in": "query",
            "name": "city_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by Autonomous System Number",
            "in": "query",
            "name": "asn_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by postal/ZIP code",
            "in": "query",
            "name": "zip_code_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by node count",
            "in": "query",
            "name": "residential_availability_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Group results by specified field(s). Multiple fields separated by commas.\nWhen grouping is used, returns aggregated node counts for each group.\n",
            "in": "query",
            "name": "group_by",
            "schema": {
              "enum": [
                "country",
                "subdivision",
                "city",
                "asn",
                "zip_code"
              ],
              "type": "string"
            }
          },
          {
            "description": "Sort results by field. Add '_desc' for descending or '_asc' for ascending.\nDefault is descending order.\n",
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "residential_options": {
                          "items": {
                            "properties": {
                              "asn_id": {
                                "description": "Filter by Autonomous System Number",
                                "example": 15169,
                                "type": "integer"
                              },
                              "city_name": {
                                "description": "Filter by city name",
                                "example": "San Francisco",
                                "type": "string"
                              },
                              "country_id": {
                                "description": "Filter by 2-character country code",
                                "example": "US",
                                "type": "string"
                              },
                              "residential_availability_node_count": {
                                "description": "Filter by node count",
                                "example": 100,
                                "type": "integer"
                              },
                              "subdivision_id": {
                                "description": "Filter by state/province identifier",
                                "example": "CA",
                                "type": "string"
                              },
                              "zip_code_alias": {
                                "description": "Filter by postal/ZIP code",
                                "example": "94107",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_residential_availability_node_count": {
                          "description": "Total number of nodes available for given filter parameters",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Residential Options search successful",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Search residential node count successful"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Residential Availability",
        "tags": [
          "Residential Availability"
        ]
      }
    },
    "/public/user/residential_ledger/retrieve/{residential_ledger_id}": {
      "get": {
        "description": "Retrieves a specific Residential Ledger based on the provided ID for the current user's account.\n",
        "parameters": [
          {
            "description": "ID of the Residential Ledger to retrieve",
            "in": "path",
            "name": "residential_ledger_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResidentialLedgerSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Residential Ledger Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Residential Ledger",
        "tags": [
          "Residential Ledger"
        ]
      }
    },
    "/public/user/residential_ledger/search": {
      "get": {
        "description": "Search for entries in the Residential Ledger using various filters.\n",
        "parameters": [
          {
            "description": "Unique identifier of the Residential Ledger entry.",
            "in": "query",
            "name": "residential_ledger_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Service identifier associated with the ledger entry.",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Adjustment identifier associated with the ledger entry.",
            "in": "query",
            "name": "service_adjustment_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Reason for the ledger entry.",
            "in": "query",
            "name": "residential_ledger_reason",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of requests recorded in the ledger entry.",
            "in": "query",
            "name": "residential_ledger_requests",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Data usage in bytes recorded in the ledger entry.",
            "in": "query",
            "name": "residential_ledger_bytes",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The date of the ledger entry.",
            "in": "query",
            "name": "residential_ledger_period_date",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creation datetime of the ledger entry.",
            "in": "query",
            "name": "residential_ledger_creation_datetime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Last update datetime of the ledger entry.",
            "in": "query",
            "name": "residential_ledger_last_update_datetime",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResidentialLedgerSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Residential Ledger search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Residential Ledger",
        "tags": [
          "Residential Ledger"
        ]
      }
    },
    "/public/user/service/cancel/{service_id}": {
      "delete": {
        "description": "Allows the authenticated user to cancel a specific service associated with their account.\nThe user provides a service_id and optionally a cancel feedback and comment.\n",
        "parameters": [
          {
            "description": "ID of the Service to cancel",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cancel_comment": {
                    "description": "A short comment explaining the reason for cancellation. Maximum 300 characters.",
                    "maxLength": 300,
                    "type": "string"
                  },
                  "cancel_feedback": {
                    "description": "Feedback code indicating the cancellation reason.\n",
                    "enum": [
                      "too_expensive",
                      "missing_features",
                      "switched_service",
                      "unused",
                      "customer_service",
                      "too_complex",
                      "low_quality",
                      "other"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Service cancellation details.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "edited": {
                      "description": "List of service IDs that were successfully canceled.",
                      "example": [
                        "API-1234-5678"
                      ],
                      "items": {
                        "description": "The service ID.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message indicating the successful cancellation of the service.",
                      "example": "Service successfully canceled.",
                      "type": "string"
                    },
                    "proxy_edited": {
                      "description": "List of proxy IDs that were affected by the cancellation of the service.",
                      "example": [
                        "a7f8b4f1-da8d-4e9f-bdd2-21e74d2eafff",
                        "f5bade6e-29b2-4a8a-bd4d-21c528794dd6"
                      ],
                      "items": {
                        "description": "The proxy ID.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully canceled the service."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Cancel Service",
        "tags": [
          "Service"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/service/edit/{service_id}": {
      "patch": {
        "description": "Allows a user to edit the details of an existing service.\nThis can include changes in payment method, adjusting automatic collection,\nand marking for cancellation at the end of a period.\n",
        "parameters": [
          {
            "description": "ID of the Service to edit",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content type for the request body as application/json.",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "default": "application/json",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cancel_comment": {
                    "description": "Comment regarding the cancellation.",
                    "type": "string"
                  },
                  "cancel_feedback": {
                    "description": "Feedback reasons for cancellation.",
                    "type": "string"
                  },
                  "payment_method_id": {
                    "description": "New payment method ID.",
                    "type": "string"
                  },
                  "service_is_automatic_collection": {
                    "description": "Flag to determine if service charge should be automatic.",
                    "type": "boolean"
                  },
                  "service_is_pending_cancellation": {
                    "description": "Indicates if the service should be canceled at the end of the period.",
                    "type": "boolean"
                  },
                  "service_metadata": {
                    "description": "Arbitrary metadata object associated with the service.\nConstraints\n  - Must be a valid, non-nested JSON object.\n  - Maximum 30 keys.\n  - Each value's string representation \u2264 300 characters.\n  - Total size \u2264 32KB.\n",
                    "properties": {},
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Parameters required to edit the service.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "edited": {
                      "description": "List of service IDs that were successfully edited.",
                      "example": [
                        "API-1234-5678"
                      ],
                      "items": {
                        "description": "The service ID.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Success message.",
                      "example": "Service successfully edited.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successfully edited the service."
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Edit Service",
        "tags": [
          "Service"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/public/user/service/retrieve/{service_id}": {
      "get": {
        "description": "Retrieves a specific Service based on the provided ID for the current user's account.\nIf the 'show_proxies' parameter is set to 'True', it will also fetch proxies associated\nwith each service and add them to the result.\n",
        "parameters": [
          {
            "description": "ID of the Service to retrieve",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If the proxies associated with the service should be returned",
            "in": "query",
            "name": "proxies",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceSuccessfulRetrieveResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "proxies": {
                              "items": {
                                "$ref": "#/components/schemas/Proxy"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "proxy_user_ids": {
                              "items": {
                                "example": "p_user1",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Service Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Service",
        "tags": [
          "Service"
        ]
      }
    },
    "/public/user/service/search": {
      "get": {
        "description": "Search Services on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the service",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current status of the service",
            "in": "query",
            "name": "service_status",
            "schema": {
              "enum": [
                "awaiting_fulfillment",
                "awaiting_manual_fulfillment",
                "awaiting_additional_fulfillment",
                "active",
                "canceled",
                "complete",
                "overdue"
              ],
              "type": "string"
            }
          },
          {
            "description": "Name of the service",
            "in": "query",
            "name": "service_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of the service",
            "in": "query",
            "name": "service_type",
            "schema": {
              "enum": [
                "datacenter",
                "isp",
                "residential"
              ],
              "type": "string"
            }
          },
          {
            "description": "Protocol of the service",
            "in": "query",
            "name": "service_protocol",
            "schema": {
              "enum": [
                "ipv4",
                "ipv6",
                "dual"
              ],
              "type": "string"
            }
          },
          {
            "description": "Quantity of the service",
            "in": "query",
            "name": "service_quantity",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Payment method ID of the service",
            "in": "query",
            "name": "payment_method_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Total amount of the service",
            "in": "query",
            "name": "service_total",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Service cycle (e.g., \"1:month\")",
            "in": "query",
            "name": "service_cycle",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Datetime the service was dispatched",
            "in": "query",
            "name": "service_dispatch_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Datetime the service will expire",
            "in": "query",
            "name": "service_expiry_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "URL of the service image",
            "in": "query",
            "name": "service_image",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If the service is set for automatic collection",
            "in": "query",
            "name": "service_is_automatic_collection",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If the service is pending cancellation",
            "in": "query",
            "name": "service_is_pending_cancellation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "ISO Country Code [(ISO 3166-1 alpha-2)](https://www.iban.com/country-codes)",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Price ID of the service",
            "in": "query",
            "name": "service_price_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Product ID of the service",
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Promotional code of the service",
            "in": "query",
            "name": "service_promotional_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Subscription ID of the service",
            "in": "query",
            "name": "service_subscription_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Datetime the service was created",
            "in": "query",
            "name": "service_creation_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Datetime the service was last updated",
            "in": "query",
            "name": "service_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "If the proxies associated with the service should be returned",
            "in": "query",
            "name": "proxies",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceSuccessfulSearchResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "proxies": {
                                "items": {
                                  "$ref": "#/components/schemas/Proxy"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "proxy_user_ids": {
                                "items": {
                                  "example": "p_user1",
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Service search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Services",
        "tags": [
          "Service"
        ]
      }
    },
    "/public/user/service_adjustment/retrieve/{service_adjustment_id}": {
      "get": {
        "description": "Retrieves a specific Service Adjustment based on the provided ID for the current user's account.\nThe returned adjustment provides details about any modifications or updates made to the user's service.\n",
        "parameters": [
          {
            "description": "ID of the Service Adjustment to retrieve",
            "in": "path",
            "name": "service_adjustment_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceAdjustmentSuccessfulRetrieveResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "proxy_replacements": {
                              "items": {
                                "$ref": "#/components/schemas/ProxyReplacement"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Service Adjustment Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Service Adjustment",
        "tags": [
          "Service Adjustment"
        ]
      }
    },
    "/public/user/service_adjustment/search": {
      "get": {
        "description": "Search Service Adjustments on the customer account using various filters.\n",
        "parameters": [
          {
            "description": "ID of the invoice",
            "in": "query",
            "name": "invoice_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Service ID associated with the service adjustment",
            "in": "query",
            "name": "service_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the service adjustment",
            "in": "query",
            "name": "service_adjustment_id",
            "schema": {
              "format": "string",
              "type": "integer"
            }
          },
          {
            "description": "Type of the service adjustment",
            "in": "query",
            "name": "service_adjustment_type",
            "schema": {
              "enum": [
                "ingestion",
                "fulfillment",
                "update",
                "proxy_replacement",
                "extension",
                "cancel"
              ],
              "type": "string"
            }
          },
          {
            "description": "Current status of the service adjustment",
            "in": "query",
            "name": "service_adjustment_status",
            "schema": {
              "enum": [
                "pending",
                "complete",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether the adjustment was made by an administrator",
            "in": "query",
            "name": "service_adjustment_is_administrator",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the adjustment was made automatically",
            "in": "query",
            "name": "service_adjustment_is_automatic",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the adjustment was made by a customer",
            "in": "query",
            "name": "service_adjustment_is_customer",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Datetime the service adjustment was created",
            "in": "query",
            "name": "service_adjustment_creation_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Datetime the service adjustment was last updated",
            "in": "query",
            "name": "service_adjustment_last_update_datetime",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceAdjustmentSuccessfulSearchResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "proxy_replacements": {
                                "items": {
                                  "$ref": "#/components/schemas/ProxyReplacement"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Successful Service Adjustment search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Service Adjustments",
        "tags": [
          "Service Adjustment"
        ]
      }
    },
    "/public/user/subdivision/retrieve/{subdivision_id}": {
      "get": {
        "description": "Retrieves a specific Subdivision.\n",
        "parameters": [
          {
            "description": "ID of the Subdivision to retrieve",
            "in": "path",
            "name": "subdivision_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubdivisionSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Subdivision Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Subdivision",
        "tags": [
          "Subdivision"
        ]
      }
    },
    "/public/user/subdivision/search": {
      "get": {
        "description": "Search Subdivision entries using various filters.\nThis endpoint allows users to query subdivisions based on specific attributes.\n",
        "parameters": [
          {
            "description": "Unique identifier of the Subdivision",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Subdivision",
            "in": "query",
            "name": "subdivision_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Country identifier to which the Subdivision belongs",
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Alias or alternative name for the Subdivision",
            "in": "query",
            "name": "subdivision_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current number of online nodes in the Subdivision",
            "in": "query",
            "name": "subdivision_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubdivisionSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Subdivision search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Subdivision",
        "tags": [
          "Subdivision"
        ]
      }
    },
    "/public/user/zip_code/retrieve/{zip_code_id}": {
      "get": {
        "description": "Retrieves a specific Zip Codeq.\n",
        "parameters": [
          {
            "description": "ID of the Zip Code to retrieve",
            "in": "path",
            "name": "zip_code_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ZipCodeSuccessfulRetrieveResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Zip Code Retrieve"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Retrieve Zip Code",
        "tags": [
          "Zip Code"
        ]
      }
    },
    "/public/user/zip_code/search": {
      "get": {
        "description": "Search Zip Code entries using various filters.\n",
        "parameters": [
          {
            "description": "Filter by specific zip code ID",
            "in": "query",
            "name": "zip_code_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by zip code alias",
            "in": "query",
            "name": "zip_code_alias",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by subdivision ID",
            "in": "query",
            "name": "subdivision_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by zip code node count",
            "in": "query",
            "name": "zip_code_node_count",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/sort_by"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ZipCodeSuccessfulSearchResponse"
                    }
                  ]
                }
              }
            },
            "description": "Successful Zip Code search"
          }
        },
        "security": [
          {
            "APIPrivateKey": [],
            "APIPublicKey": []
          }
        ],
        "summary": "Search Zip Code",
        "tags": [
          "Zip Code"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.pingproxies.com/1.0/"
    }
  ],
  "x-original-swagger-version": "2.0",
  "x-tagGroups": [
    {
      "name": "Authorization",
      "tags": [
        "Authorization"
      ]
    },
    {
      "name": "Account Management",
      "tags": [
        "Customer",
        "Notification"
      ]
    },
    {
      "name": "Services",
      "tags": [
        "Service",
        "Service Adjustment",
        "Subscription Schedule",
        "Proxy"
      ]
    },
    {
      "name": "Residential",
      "tags": [
        "Residential",
        "Residential Availability",
        "Residential Ledger"
      ]
    },
    {
      "name": "Proxy Authentication",
      "tags": [
        "Proxy User"
      ]
    },
    {
      "name": "Purchasing",
      "tags": [
        "Checkout"
      ]
    },
    {
      "name": "Analytics & Observability",
      "tags": [
        "Log",
        "Log Summary",
        "Proxy Analytics"
      ]
    },
    {
      "name": "Location & Carrier Selection",
      "tags": [
        "ASN",
        "Continent",
        "Country",
        "Subdivision",
        "City",
        "Zip Code"
      ]
    },
    {
      "name": "Proxy Testing",
      "tags": [
        "Proxy Test Server"
      ]
    }
  ]
}